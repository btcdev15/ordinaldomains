{"version":3,"sources":["connectors.js","hooks.js","pages/TokenCreator.js","components/ConnectModal.js","index.js","components/LaunchComponent.js","components/NFTSaleComponent.js"],"names":["RPC_URLS","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","137","1","56","qrcode","useEagerConnect","useWeb3React","activate","active","useState","tried","setTried","useEffect","isAuthorized","then","undefined","catch","useInactiveListener","suppress","error","ethereum","window","on","handleChainChanged","chainId","console","log","handleAccountsChanged","accounts","length","handleNetworkChanged","networkId","removeListener","TokenCreator","connectorsByName","Injected","WalletConnect","ConnectModal","context","connector","library","account","deactivate","React","activatingConnector","setActivatingConnector","setBlockNumber","stale","getBlockNumber","blockNumber","updateBlockNumber","setEthBalance","getBalance","balance","class","id","tabindex","role","aria-labelledby","aria-hidden","type","data-dismiss","aria-label","className","style","textAlign","fontWeight","color","width","onClick","cursor","src","alt","getLibrary","provider","Web3Provider","pollingInterval","GlobalStyles","createGlobalStyle","App","path","ReactDOM","document","getElementById","auth","Buffer","from","toString","ipfs","ipfsHttpClient","host","port","protocol","apiPath","headers","authorization","LaunchComponent","colname","setColname","symbol","setSymbol","twitter","setTwitter","telegram","setTelegram","website","setWebsite","description","setDescription","supply","setSupply","loading","setLoading","date","setDate","time","setTime","price","setPrice","images","setImages","showupload","setShowupload","uploaded","setUploaded","allipfs","setAllipfs","gbupload","setGbpupload","toupload","setToupload","properties","setProperties","uploadIMGs","file","a","preventDefault","target","files","alert","parseInt","err","uploadIPFS","arrayToDb","gbpUpload","sizeInBytes","i","size","addAll","progress","prog","filePath","toFixed","result","push","deploy","erroNumber","toLowerCase","startsWith","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","match","web3","Web3","utils","toWei","basePrice","d","Date","day","getDay","ABI","ABIBoth","Bytecode","BYTECODEBoth","toSend","theAttributes","finalAttributes","readUploadedFileAsText","theFile","JSON","parse","content","attributes","objs","myObjs","stringify","theThing","wrapWithDirectory","cid","startingTime","getTime","contract","eth","Contract","data","object","arguments","send","gasLimit","value","x","_address","axios","post","location","href","uploadAttributes","inputFile","temporaryFileReader","FileReader","Promise","resolve","reject","onerror","abort","DOMException","onload","readAsText","marginTop","marginBottom","background","borderRadius","boxShadow","maxWidth","margin","display","for","placeholder","onChange","event","data-toggle","data-target","multiple","accept","fontSize","download","disabled","newestOnTop","rtl","pauseOnFocusLoss","NFTSaleComponent","props","thechain","setThechain","nftimg","setNftimg","ipfses","setIpfses","setAttributes","setWebiste","name","setName","kycd","setKycd","amount","setAmount","ownervisiting","setOwnervisiting","someimages","setSomeimages","get","address","theChain","chainID","ipfeses","kyc","calls","params","ethMulticall","ethabi","multicallResults","polygonMulticall","polygonabi","bscMulticall","calls2","multicallResults2","resultsImages","replace","j","image","intervalId","setInterval","random","Math","round","clearInterval","multicallHelper","abi","itf","Interface","calldata","map","call","callData","encodeFunctionData","TOKENABI","ethCalls","providers","HttpProvider","multicallabi","aggregatedData","methods","aggregate","returnData","balanceTokens","decodeFunctionResult","delay","ms","res","setTimeout","sss","setSss","fixuriNFT","theIPFSARRAY","numberos","ABIPolygon","fixURImultiple","mintNFT","returnLastId","currentNFT","obj","projectId","amountToSend","add","added","mint","success","mintNFTmultiple","parseFloat","withdrawfunds","withdrawBNB","textDecoration","includes","clientId","environment","mintConfig","border","rel","marginLeft","xmlns","height","fill","viewBox","fill-rule","aria-valuenow","aria-valuemin","aria-valuemax","padding"],"mappings":"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","file":"static/js/main.01c7b192.chunk.js","sourcesContent":["import { InjectedConnector } from \"@web3-react/injected-connector\";\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\r\n\r\nconst POLLING_INTERVAL = 12000;\r\nconst RPC_URLS = {\r\n  1: \"https://mainnet.infura.io/v3/84842078b09946638c03157f83405213\",\r\n  4: \"https://rinkeby.infura.io/v3/84842078b09946638c03157f83405213\",\r\n  5: \"https://goerli.infura.io/v3/aee4dd30db8a42aa935d0f714ee521ae\",\r\n  56:\"https://bsc-dataseed.binance.org/\",\r\n  137:\"https://rpc.ankr.com/polygon\"\r\n};\r\n\r\nexport const injected = new InjectedConnector({\r\n  supportedChainIds: [1, 56, 137]\r\n});\r\n\r\nexport const walletconnect = new WalletConnectConnector({\r\n  rpc: { 137: RPC_URLS[137], 1: RPC_URLS[1], 56: RPC_URLS[56] },\r\n  qrcode: true\r\n})\r\n\r\n","import { useState, useEffect } from \"react\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\n\r\nimport { injected } from \"./connectors\";\r\n\r\nexport function useEagerConnect() {\r\n  const { activate, active } = useWeb3React();\r\n\r\n  const [tried, setTried] = useState(false);\r\n\r\n  useEffect(() => {\r\n    injected.isAuthorized().then(isAuthorized => {\r\n      if (isAuthorized) {\r\n        \r\n        activate(injected, undefined, true).catch(() => {\r\n          setTried(true);\r\n        });\r\n      } else {\r\n        setTried(true);\r\n      }\r\n    });\r\n  }, [activate]); // intentionally only running on mount (make sure it's only mounted once :))\r\n\r\n  // if the connection worked, wait until we get confirmation of that to flip the flag\r\n  useEffect(() => {\r\n    if (!tried && active) {\r\n      setTried(true);\r\n    }\r\n  }, [tried, active]);\r\n\r\n  return tried;\r\n}\r\n\r\nexport function useInactiveListener(suppress = false) {\r\n  const { active, error, activate } = useWeb3React();\r\n\r\n  useEffect(() => {\r\n    const { ethereum } = window;\r\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\r\n      const handleChainChanged = chainId => {\r\n        console.log(\"chainChanged\", chainId);\r\n        activate(injected);\r\n      };\r\n\r\n      const handleAccountsChanged = accounts => {\r\n        console.log(\"accountsChanged\", accounts);\r\n        if (accounts.length > 0) {\r\n          activate(injected);\r\n        }\r\n      };\r\n\r\n      const handleNetworkChanged = networkId => {\r\n        console.log(\"networkChanged\", networkId);\r\n        activate(injected);\r\n      };\r\n\r\n      ethereum.on(\"chainChanged\", handleChainChanged);\r\n      ethereum.on(\"accountsChanged\", handleAccountsChanged);\r\n      ethereum.on(\"networkChanged\", handleNetworkChanged);\r\n\r\n      return () => {\r\n        if (ethereum.removeListener) {\r\n          ethereum.removeListener(\"chainChanged\", handleChainChanged);\r\n          ethereum.removeListener(\"accountsChanged\", handleAccountsChanged);\r\n          ethereum.removeListener(\"networkChanged\", handleNetworkChanged);\r\n        }\r\n      };\r\n    }\r\n\r\n    return () => {};\r\n  }, [active, error, suppress, activate]);\r\n}\r\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport Navbar from '../components/Navbar'\nimport TokenCreatorComponent from '../components/TokenCreator'\nimport Footer from '../components/Footer'\n\n\n\n\n\nfunction TokenCreator() {\n\n\n\n\n  const [loadinghelper, setLoadingHelper] = React.useState(false)\n\n\n\n\n  return (\n    <div>\n      <Navbar />\n      <div className=\"container\">\n        <br /> \n        <div>\n            <TokenCreatorComponent />      \n\n        </div>\n      </div>\n      <Footer />\n   </div>\n\n  ); \n}\n\nexport default TokenCreator;","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport {\n    Web3ReactProvider,\n    useWeb3React,\n    UnsupportedChainIdError\n  } from \"@web3-react/core\";\n  \n  \n  import 'react-toastify/dist/ReactToastify.css';\n  import {\n    injected,\n    walletconnect,\n  } from \"../connectors\";\n  import { useEagerConnect, useInactiveListener } from \"../hooks\";\n  import Web3 from 'web3'\n  \n  const connectorsByName = {\n    Injected: injected,\n    WalletConnect: walletconnect\n  };\n\n\n\nfunction ConnectModal() {\n  \n    const context = useWeb3React();\n    const {\n      connector,\n      library,\n      chainId,\n      account,\n      activate,\n      deactivate,\n      active,\n      error\n    } = context;\n  \n    // handle logic to recognize the connector currently being activated\n    const [activatingConnector, setActivatingConnector] = React.useState();\n    React.useEffect(() => {\n      console.log('running')\n      if (activatingConnector && activatingConnector === connector) {\n        setActivatingConnector(undefined);\n      }\n    }, [activatingConnector, connector]);\n  \n    // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n    const triedEager = useEagerConnect();\n  \n    // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n    useInactiveListener(!triedEager || !!activatingConnector);\n  \n    // set up block listener\n    const [blockNumber, setBlockNumber] = React.useState();\n    React.useEffect(() => {\n      console.log('running')\n      if (library) {\n        let stale = false;\n  \n        console.log('fetching block number!!')\n        library\n          .getBlockNumber()\n          .then(blockNumber => {\n            if (!stale) {\n              setBlockNumber(blockNumber);\n            }\n          })\n          .catch(() => {\n            if (!stale) {\n              setBlockNumber(null);\n            }\n          });\n  \n        const updateBlockNumber = blockNumber => {\n          setBlockNumber(blockNumber);\n        };\n        library.on(\"block\", updateBlockNumber);\n  \n        return () => {\n          library.removeListener(\"block\", updateBlockNumber);\n          stale = true;\n          setBlockNumber(undefined);\n        };\n      }\n    }, [library, chainId]);\n  \n    // fetch eth balance of the connected account\n    const [ethBalance, setEthBalance] = React.useState();\n    React.useEffect(() => {\n      if (library && account) {\n        let stale = false;\n  \n        library\n          .getBalance(account)\n          .then(balance => {\n            if (!stale) {\n              setEthBalance(balance);\n            }\n          })\n          .catch(() => {\n            if (!stale) {\n              setEthBalance(null);\n            }\n          });\n  \n        return () => {\n          stale = true;\n          setEthBalance(undefined);\n        };\n      }\n    }, [library, account, chainId]);\n  \n  \n  \n  \n  \n  \n  \n    const truncateRegex = /^(0x[a-zA-Z0-9]{4})[a-zA-Z0-9]+([a-zA-Z0-9]{4})$/;\n  \n    const truncateEthAddress = (address) => {\n      if(address !== undefined){\n      const match = address.match(truncateRegex);\n      if (!match) return address;\n      return `${match[1]}…${match[2]}`;\n      }\n    };\n\n  return (\n    <div>\n        <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n        <div class=\"modal-dialog\" role=\"document\">\n            <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"exampleModalLabel\">Connect Wallet</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <div className=\"row\">\n                    {account && active ? <div>\n                        <p style={{textAlign:'center'}}>Connected as <span style={{fontWeight:'bold'}}>{account}</span> </p>\n                        <p style={{textAlign:'center'}}>on {chainId == 1 ? \"Ethereum\" : chainId == 137 ? \"Polygon\" : chainId == 56 ? 'Binance Smart Chain' : \"Unsupported chain\"}</p>\n                        <p style={{textAlign:'center', color:'grey'}}>If you want to change your chain, do it manually in your wallet </p>\n                        <button className=\"btn btn-outline-dark\" style={{width:'100%'}} onClick={() =>               deactivate()}>Disconnect</button>\n                        </div> : <div style={{ width:'100%'}}>\n                            <p style={{textAlign:'center'}}>Connect to Ethereum, Polygon or Binance Smart Chain</p>\n                            <div className=\"row\">\n                                <div className=\"col\" style={{cursor:'pointer'}} onClick={() => {\n                                setActivatingConnector(connectorsByName[\"Injected\"]);\n                                activate(connectorsByName[\"Injected\"]);\n                                }}>\n                                <img src=\"/metamask.png\" width=\"100%\" alt=\"metamask\" />\n                                </div>\n                                <div className=\"col\" style={{cursor:'pointer'}} onClick={() => {\n                                setActivatingConnector(connectorsByName[\"WalletConnect\"]);\n                                activate(connectorsByName[\"WalletConnect\"]);\n                                }}>\n                                <img src=\"/walletconnect.png\" width=\"100%\" alt=\"walletconnect\" />\n\n                                </div>\n                                <div className=\"col\" style={{cursor:'pointer'}} onClick={() => {\n                                setActivatingConnector(connectorsByName[\"Injected\"]);\n                                activate(connectorsByName[\"Injected\"]);\n                                }}>\n                                <img src=\"/trustwallet.svg\" width=\"100%\" alt=\"trustwallet\" />\n\n                                </div>\n                            </div>\n                            </div>}\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-dark\" data-dismiss=\"modal\">Close</button>\n            </div>\n            </div>\n        </div>\n        </div>\n\n\n    </div>\n\n\n  ); \n}\n\nexport default ConnectModal;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport {\n  Web3ReactProvider,\n  useWeb3React,\n  UnsupportedChainIdError\n} from \"@web3-react/core\";\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\n} from \"@web3-react/injected-connector\";\nimport { UserRejectedRequestError as UserRejectedRequestErrorFrame } from \"@web3-react/frame-connector\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { formatEther } from \"@ethersproject/units\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { createGlobalStyle } from \"styled-components\";\n// import Analytics from './Analytics';\n// import Project from './Project';\nimport { MoralisProvider } from \"react-moralis\";\n\n\nimport {\n  injected,\n} from \"./connectors\";\nimport Homepage from './pages/Homepage';\nimport KYC from './pages/KYC';\nimport NFTDROP from './pages/NFTDrop';\nimport DEX from './pages/Dex'\nimport Launch from './pages/Launch'\nimport Services from './pages/Services'\nimport NFTSale from './pages/Nftsale'\nimport TokenCreator from './pages/TokenCreator'\nimport ConnectModal from './components/ConnectModal'\n// import Token from './Token';\n\n\nimport './home.css'\n\nconst connectorsByName = {\n  Injected: injected\n};\n\nfunction getErrorMessage(error) {\n  if (error instanceof NoEthereumProviderError) {\n    return \"No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.\";\n  } else if (error instanceof UnsupportedChainIdError) {\n    return \"You're connected to an unsupported network.\";\n  } else if (\n    error instanceof UserRejectedRequestErrorInjected ||\n    error instanceof UserRejectedRequestErrorFrame\n  ) {\n    return \"Please authorize this website to access your Ethereum account.\";\n  } else {\n    console.error(error);\n    return \"An unknown error occurred. Check the console for more details.\";\n  }\n}\n\nfunction getLibrary(provider) {\n  const library = new Web3Provider(provider);\n  library.pollingInterval = 8000;\n  return library;\n}\n\nconst GlobalStyles = createGlobalStyle`\n  body {\n    // font-family: 'OpenSans';\n    height: 100%;\n    background: #151617;\n  }\n`\n\nfunction App() {\n  return (\n    <Router>\n    <div>\n\n    <GlobalStyles />\n<Web3ReactProvider getLibrary={getLibrary}>\n<ConnectModal />\n\n          <Switch>  \n\n          <Route path=\"/\">\n            <p style={{textAlign:'center', color:'white'}}>\n              Coming Soon\n            </p>\n          </Route>\n        </Switch>\n    </Web3ReactProvider>\n\n    </div>\n    </Router>\n  );\n}\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","\n\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport {\n    useWeb3React,\n  } from \"@web3-react/core\";\nimport Web3 from 'web3'\nimport { create as ipfsHttpClient } from 'ipfs-http-client'\nimport ABIPolygon from '../utils/abi_polygon.json'\nimport BYTECODEPolygon from '../utils/bytecode_polygon.json'\nimport ABIEth from '../utils/abi_eth.json'\nimport BYTECODEEth from '../utils/bytecode_eth.json'\nimport ABIBoth from '../utils/PRO_abi.json'\nimport BYTECODEBoth from '../utils/PRO_bytecode.json'\nimport axios from 'axios'\nimport { ToastContainer, toast } from 'react-toastify';\n\nconst auth = 'Basic ' + Buffer.from('271a2F9WoNKWxEw8NNtmMkviS4x' + ':' + 'ecfad3264edefc0e18f1ba349cb95796').toString('base64')\n\nconst ipfs = ipfsHttpClient({\n  host: 'ipfs.infura.io',\n  port: 5001,\n  protocol: 'https',\n  apiPath:'/api/v0',\n  headers: {\n    authorization: auth\n    }\n})\n\n\nfunction LaunchComponent() {\n  \n\n  const [colname, setColname] = React.useState('')\n  const [symbol, setSymbol] = React.useState('')\n  const [twitter, setTwitter] = React.useState('')\n  const [telegram, setTelegram] = React.useState('')\n  const [website, setWebsite] = React.useState('')\n  const [description, setDescription] = React.useState('')\n  const [team, setTeam] = React.useState('')\n  const [supply, setSupply] = React.useState('')\n  const [loading, setLoading] = React.useState(false)\n  const [date, setDate] = React.useState('')\n  const [time, setTime] = React.useState('')\n  const [price, setPrice] = React.useState('')\n  const [images, setImages] = React.useState([])\n  const [showupload, setShowupload] = React.useState(false)\n  const [uploaded, setUploaded] = React.useState(0)\n  const [allipfs, setAllipfs] = React.useState(0)\n  const [gbupload, setGbpupload] = React.useState(0)\n  const [toupload, setToupload] = React.useState(0)\n  const [properties, setProperties] = React.useState([])\n\n  const context = useWeb3React();\n  const {\n    library,\n    chainId,\n    account,\n    active,\n  } = context;\n\n\n\n\n  // const deployToken = async() => {\n  //     try{\n  //       setLoading(true)\n  //       if(account && (chainId == 1 || chainId == 137)){\n  //           const web3 = new Web3(library.provider)\n  //           const contract = new web3.eth.Contract(ABI);\n  //           const amount = supply * 10 ** decimals;\n  //           const amountToPay = chainId == 1 ? '100000000000000000' : '200000000000000000000'\n  //           console.log(toFixed(amount))\n  //           let x = await contract.deploy({\n  //               data: BYTECODE.object,\n  //               arguments: [name.toString(), symbol.toString(), decimals.toString(), account.toString(), toFixed(amount), amountToPay.toString()]\n  //                 }).send({\n  //                   from: account,\n  //                   value: amountToPay\n  //                 })\n  //           setLoading(false)\n  //           setIsdeployed(true)\n  //           setTokenaddress(x._address)\n  //     }\n  //     }catch(err){\n  //       alert(\"something went wrong deploying your token\")\n  //       console.log(err)\n  //       setLoading(false)\n  //     }\n\n  // }\n\n  const uploadIMGs = async(file) => {\n    file.preventDefault();\n    try{\n      console.log(file)\n      console.log(file.target.files)\n      console.log(file.target.files.length)\n      if(file.target.files.length > 5000){\n        setShowupload(false)\n        alert(\"you have uploaded more files than allowed\");\n      } else {\n        if(file.target.files.length !== parseInt(supply)){\n          setShowupload(false)\n          alert(`You must upload ${supply} NFT images`)\n        } else {\n          console.log(file.target.files)\n          setImages(file.target.files)\n          setShowupload(true)\n          // await showAttributes(file.target.files)\n        }\n      }\n\n    }catch(err){\n      setShowupload(false)\n      console.log(err)\n    }\n\n  }\n\n  const uploadIPFS = async() => {\n    try{\n      setLoading(true)\n      const arrayToDb = []\n      let gbpUpload = 0;\n      let sizeInBytes = 0;\n\n      for(let i=0; i<images.length; i++){\n        sizeInBytes = sizeInBytes+images[i].size\n      }\n\n      setToupload(sizeInBytes / 10 ** 9)\n      for await (const result of ipfs.addAll(images,         {\n        progress: (prog, filePath) => {\n          console.log(`received: ${prog} ${filePath}`)\n          gbpUpload = gbpUpload + (prog / 10 ** 9)\n          setGbpupload(gbpUpload.toFixed(6))\n        }\n      })) {\n        console.log(result)\n        arrayToDb.push(result.path)\n        setUploaded(arrayToDb.length)\n      }\n      setAllipfs(arrayToDb)\n      // const objs = []\n      // for(let i=0; i<arrayToDb.length; i++){\n      //   objs.push({\"image\":`ipfs://${arrayToDb[i]}`})\n      // }\n      // console.log(objs)\n\n      // const myObjs = [{ path: '1', content: JSON.stringify(objs[0]) }, { path: '2', content: JSON.stringify(objs[1]) }]\n\n      // for await (const result of ipfs.addAll(myObjs,         {\n      //   wrapWithDirectory: true,\n      //   progress: (prog, filePath) => {\n      //     console.log(`received: ${prog} ${filePath}`)\n      //     gbpUpload = gbpUpload + (prog / 10 ** 9)\n      //     setGbpupload(gbpUpload.toFixed(6))\n      //   }\n      // })) {\n      //   console.log('new result is ', result)\n      //   arrayToDb.push(result.path)\n      //   setUploaded(arrayToDb.length)\n      // }\n\n\n\n      setLoading(false)\n      // console.log(\"x is \", x)\n    }catch(err){\n      console.log(\"error is \", err)\n      alert(\"an error has occured\")\n      setLoading(false)\n    }\n  }\n\n  // validate domain \n//   function frmValidate( domain ) {\n//     // since domain could have subdomain like qwe.asd.zxc,\n//     // parse into substrings at \".\"\n//     var dParts = domain.split('.');\n//     // capture tld from end of list\n//     var tld = dParts[dParts.length - 1];\n//     // determine whether tld is \"com\" or \"net\"\n//     var isValid = ('com' === tld) || ('net' === tld) || ('io' === tld) || ('org' === tld);\n//     // for testing\n//     // alert('top level domain is: ' + tld + ' and is ' + (isValid?'':'NOT ') + 'valid');\n//     // advise caller\n//     return isValid;\n// };\n\nfunction frmValidate(string) {\n  var res = string.match(/(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g);\n  return (res !== null)\n}; \n\n\nfunction shuffle(sourceArray) {\n  for (var i = 0; i < sourceArray.length - 1; i++) {\n      var j = i + Math.floor(Math.random() * (sourceArray.length - i));\n\n      var temp = sourceArray[j];\n      sourceArray[j] = sourceArray[i];\n      sourceArray[i] = temp;\n  }\n  return sourceArray;\n}\n\nconst dpeloy2 = async() => {\n  try{\n    let theAttributes = properties;\n    let finalAttributes = []\n    for(let i=0; i<theAttributes.length; i++){\n      let theFile = await readUploadedFileAsText(theAttributes[i])\n      let content = await JSON.parse(theFile)\n      finalAttributes.push(content.attributes)\n    }\n    console.log('final is ', finalAttributes)\n    let objs = []\n    let angelicObjects = []\n    let superRares = []\n    let regulars = []\n\n\n    \n    for(let i=0; i<5000; i++){\n\n      if (finalAttributes[i].filter(e => e.value === 'Angelic').length > 0 && angelicObjects.length < 14) {\n        /* vendors contains the element we're looking for */\n        angelicObjects.push({\"image\":`ipfs://QmUUbapHPkRWgvYKoVNvD4SSgS7upyfWMd2HL5y9QT6EiR/${i+1}.png`,\"attributes\":finalAttributes[i]})\n      }else {\n        if ((finalAttributes[i].filter(e => e.value === 'Icedragon').length > 0 || finalAttributes[i].filter(e => e.value === 'FireDragon').length > 0 || finalAttributes[i].filter(e => e.value === 'Blackdragon').length > 0) && superRares.length < 9 && finalAttributes[i].filter(e => e.value === 'Legendaryframebadge').length >0 == false ) {\n          superRares.push({\"image\":`ipfs://QmUUbapHPkRWgvYKoVNvD4SSgS7upyfWMd2HL5y9QT6EiR/${i+1}.png`,\"attributes\":finalAttributes[i]})\n        } else {\n          if(regulars.length < 40){\n            regulars.push({\"image\":`ipfs://QmUUbapHPkRWgvYKoVNvD4SSgS7upyfWMd2HL5y9QT6EiR/${i+1}.png`,\"attributes\":finalAttributes[i]})     \n          } else {\n            objs.push({\"image\":`ipfs://QmUUbapHPkRWgvYKoVNvD4SSgS7upyfWMd2HL5y9QT6EiR/${i+1}.png`,\"attributes\":finalAttributes[i]})     \n          }\n        }\n      }\n        \n      // for(let j=0; j<finalAttributes[i].length; j++){\n      //   for (const [key, value] of Object.entries(finalAttributes[i][j])) {\n          \n      //     if((value == 'Angelic' || value == 'Beast' || value == 'Demonic') && angelicObjects.length < 14){\n      //       angelicObjects.push({\"image\":`ipfs://QmUUbapHPkRWgvYKoVNvD4SSgS7upyfWMd2HL5y9QT6EiR/${i+1}.png`,\"attributes\":finalAttributes[i]})\n      //     } else {\n      //       if((value == 'Icedragon' || value == 'Firedragon' || value == 'Blackdragon') && superRares.length <9 && !(value == 'Blackdragon' && superRares.length !== 8)){\n      //         superRares.push({\"image\":`ipfs://QmUUbapHPkRWgvYKoVNvD4SSgS7upyfWMd2HL5y9QT6EiR/${i+1}.png`,\"attributes\":finalAttributes[i]})\n      //       } else {\n      //           objs.push({\"image\":`ipfs://QmUUbapHPkRWgvYKoVNvD4SSgS7upyfWMd2HL5y9QT6EiR/${i+1}.png`,\"attributes\":finalAttributes[i]})     \n      //       }\n\n            \n      //     }\n      //   }\n      // }\n\n    }\n\n    console.log('angelic objects ', angelicObjects)\n    console.log('super rare ', superRares)\n    console.log('regulars are ', regulars)\n    console.log('regulars ', angelicObjects.length, superRares.length, regulars.length, objs.length)\n\n    objs = await shuffle(objs)\n\n    let children = superRares.concat(angelicObjects);\n    children = children.concat(regulars)\n    children = children.concat(objs)\n    console.log('children are ', children, children.length)\n    // console.log(objs)\n    let myObjs = []\n\n    \n    for(let i=0; i<children.length; i++){\n      myObjs.push({\n        path:i.toString(),\n        content:JSON.stringify(children[i])\n      })\n    }\n\n    console.log('start ipfs')\n    let theThing = ''\n\n    for await (const result of ipfs.addAll(myObjs,         {\n      wrapWithDirectory: true,\n      progress: (prog, filePath) => {\n        console.log(`received: ${prog} ${filePath}`)\n      }\n    })) {\n      console.log('new result is ', result)\n      if(result.path == ''){\n        // console.log(result.cid.toString())\n        theThing = `ipfs://${result.cid.toString()}/`\n      }\n    }\n\n    console.log('the ting is ', theThing)\n\n  }catch(err){\n    console.log('err is ', err)\n  }\n}\n\n  const deploy = async () => {\n    try{\n      let erroNumber = 0;\n      if(telegram.toLowerCase().startsWith('https://t.me/') == false){\n        toast.error('Telegram must start with \"https://t.me/\"', {\n          position: \"top-right\",\n          autoClose: 15000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          });\n        erroNumber += 1;\n      }\n      if(twitter.toLowerCase().startsWith('https://twitter.com/') == false){\n        toast.error('Twiter must start with \"https://twitter.com/\"', {\n          position: \"top-right\",\n          autoClose: 15000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          });\n        erroNumber += 1;\n      }\n\n      if(frmValidate(website) == false){\n        toast.error('You must pass a valid domain', {\n          position: \"top-right\",\n          autoClose: 15000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          });\n        erroNumber += 1;\n      }\n\n      if(description == '' || description.length > 200){\n        toast.error('Your description can be a maximum of 200 characters', {\n          position: \"top-right\",\n          autoClose: 15000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          });\n        erroNumber += 1;\n      }\n\n      // if(team == '' || team.length > 200){\n      //   toast.error('Your TEAM description can be a maximum of 200 characters', {\n      //     position: \"top-right\",\n      //     autoClose: 15000,\n      //     hideProgressBar: false,\n      //     closeOnClick: true,\n      //     pauseOnHover: true,\n      //     draggable: true,\n      //     progress: undefined,\n      //     });\n      //   erroNumber += 1;\n      // }\n\n      if(supply < 2){\n        toast.error('Minimum supply is 2 NFTs', {\n          position: \"top-right\",\n          autoClose: 15000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          });\n        erroNumber += 1;\n      }\n\n      if(price <= 0){\n        toast.error('Provide a price for minting your NFT', {\n          position: \"top-right\",\n          autoClose: 15000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          });\n        erroNumber += 1;\n      }\n\n      if(erroNumber == 0){\n        setLoading(true)\n        const web3 = new Web3(library.provider)\n        let basePrice = await web3.utils.toWei(price);\n        let toSend;\n        let ABI;\n        let Bytecode\n        const d = new Date();\n        let day = d.getDay();\n\n        if(chainId == 137){\n          // ABI = ABIPolygon\n          // Bytecode = BYTECODEPolygon\n          ABI = ABIBoth;\n          Bytecode = BYTECODEBoth;\n          // toSend = '0'\n          if(supply <= 1000){\n\n            if(day >= 5 && day <= 7){\n              toSend = '55000000000000000000' // \n            } else {\n              toSend = '110000000000000000000'\n            }\n          } else {\n            if(supply <= 5000){\n              if(day >= 5 && day <= 7){\n                toSend = '90000000000000000000'\n              } else {\n                toSend = '180000000000000000000'\n              }\n            } else {\n              if(day >= 5 && day <= 7){\n                toSend = '175000000000000000000'\n              } else {\n                toSend = '350000000000000000000'\n              }\n            }\n          }\n        } else {\n\n          if(chainId == 56){ // 0.75BNB , 1000-5000 1.5bnb and 500-10000 \n            ABI = ABIBoth;\n            Bytecode = BYTECODEBoth;\n            if(supply <= 1000){\n                  toSend = '750000000000000000'\n            } else {\n              if(supply <= 5000){\n                  toSend = '1500000000000000000'\n              } else {\n                  toSend = '2500000000000000000'\n              }\n            }\n          }\n          else{\n          // ABI = ABIEth\n          // Bytecode = BYTECODEEth\n          ABI = ABIBoth;\n          Bytecode = BYTECODEBoth;\n          // toSend = '0'\n          if(supply <= 1000){\n            if(day >= 5 && day <= 7){\n              toSend = '30000000000000000'\n            } else {\n              toSend = '60000000000000000'\n            }\n          } else {\n            if(supply <= 5000){\n              if(day >= 5 && day <= 7){\n                toSend = '100000000000000000' //  50000000000000000\n              } else {\n                toSend = '100000000000000000'\n              }\n            } else {\n              if(day >= 5 && day <= 7){\n                toSend = '100000000000000000'\n              } else {\n                toSend = '200000000000000000'\n              }\n            }\n          }\n        }\n      }\n        \n        let theAttributes = properties;\n        let finalAttributes = []\n        for(let i=0; i<theAttributes.length; i++){\n          let theFile = await readUploadedFileAsText(theAttributes[i])\n          let content = await JSON.parse(theFile)\n          finalAttributes.push(content.attributes)\n        }\n\n\n        const objs = []\n        for(let i=0; i<allipfs.length; i++){\n          objs.push({\"image\":`ipfs://${allipfs[i]}`,\"attributes\":finalAttributes[i]})\n        }\n        console.log(objs)\n        const myObjs = []\n        for(let i=0; i<objs.length; i++){\n          myObjs.push({\n            path:i.toString(),\n            content:JSON.stringify(objs[i])\n          })\n        }\n        console.log('final to upload is ', myObjs)\n\n        let theThing = ''\n\n        for await (const result of ipfs.addAll(myObjs,         {\n          wrapWithDirectory: true,\n          progress: (prog, filePath) => {\n            console.log(`received: ${prog} ${filePath}`)\n          }\n        })) {\n          console.log('new result is ', result)\n          if(result.path == ''){\n            // console.log(result.cid.toString())\n            theThing = `ipfs://${result.cid.toString()}/`\n          }\n        }\n\n\n        let startingTime = new Date(`${date} ${time}`)\n        startingTime = startingTime.getTime() / 1000\n\n\n        const contract = new web3.eth.Contract(ABI);\n        let x = await contract.deploy({\n          data: Bytecode.object,\n          arguments: [colname,symbol,\"0\",basePrice.toString(),startingTime.toString(),supply.toString(), twitter.toString(), website.toString(), telegram.toString(),theThing]\n            }).send({\n              from: account,\n              gasLimit:'5000000',\n              value:toSend\n            })\n        console.log(\"x is \", x)\n        console.log('objs is ', {\n            \"chainID\":chainId,\n            \"address\":x._address,\n            \"ipfeses\":allipfs,\n            \"creator\":account,\n            \"startingTime\":startingTime.toString(),\n            \"name\":colname,\n            \"price\":price,\n            \"attributes\":finalAttributes,\n            \"description\":description\n          })\n        await axios.post('https://fast-dusk-72169.herokuapp.com/recordInfo', {\n          \"chainID\":chainId,\n          \"address\":x._address,\n          \"ipfeses\":allipfs,\n          \"creator\":account,\n          \"startingTime\":startingTime.toString(),\n          \"name\":colname,\n          \"price\":price,\n          \"attributes\":finalAttributes,\n          \"description\":description\n        })\n\n        setLoading(false)\n        window.location.href = `/project/${x._address}`\n      }\n\n\n    }catch(err){\n      setLoading(false)\n    }\n  }\n\n\n  const uploadAttributes = async(file) => {\n    file.preventDefault();\n    try{\n      console.log(file)\n      console.log(file.target.files)\n      console.log(file.target.files.length)\n      if(file.target.files.length > 5000){\n        toast.error('you have uploaded more files than allowed', {\n          position: \"top-right\",\n          autoClose: 10000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          });\n      } else {\n        if(file.target.files.length !== parseInt(supply)){\n          alert(`You must upload ${supply} attribute .JSON files`)\n        } else {\n          setProperties(file.target.files)\n          // await showAttributes(file.target.files)\n        }\n      }\n\n    }catch(err){\n      console.log(err)\n    }\n\n  }\n\n  \n  const readUploadedFileAsText = (inputFile) => {\n    const temporaryFileReader = new FileReader();\n  \n    return new Promise((resolve, reject) => {\n      temporaryFileReader.onerror = () => {\n        temporaryFileReader.abort();\n        reject(new DOMException(\"Problem parsing input file.\"));\n      };\n  \n      temporaryFileReader.onload = () => {\n        resolve(temporaryFileReader.result);\n      };\n      temporaryFileReader.readAsText(inputFile);\n    });\n  };\n\n  return (\n    <div className=\"row\" style={{marginTop:'10%', marginBottom:'5%'}}>\n        <div className=\"card\" style={{width:\"100%\", background:'#1e2023', color:'white', borderRadius:'20px', boxShadow:'0 5.40728px 10.8146px rgba(0,0,0,.3)'}}>\n            <div className=\"card-body\">\n                <img src=\"/minter.svg\" width=\"100%\" alt=\"kyc\" style={{maxWidth:'150px', margin:'0 auto', display:'block'}} />\n                <h5 style={{textAlign:'center'}}>\n                NFT Sale Creator\n                </h5>\n                <p style={{textAlign:'center', color:'grey'}}>\n                Launch your NFT collection and sell it on Mintstarter\n                </p>\n                <form>\n                <div className=\"row\">\n                <div className=\"col-6\">\n                    <div class=\"mb-3\">\n                        <label for=\"exampleFormControlInput1\" class=\"form-label\">Collection Name*</label>\n                        <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" style={{background:'transparent', color:'green'}} placeholder=\"MINT Collection\" value={colname} onChange={(event) => setColname(event.target.value)} />\n                    </div>\n                  </div>\n                  <div className=\"col-6\">\n                    <div class=\"mb-3\">\n                        <label for=\"exampleFormControlInput1\" class=\"form-label\">Collection Symbol*</label>\n                        <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" style={{background:'transparent', color:'green'}} placeholder=\"MINT\" value={symbol} onChange={(event) => setSymbol(event.target.value)} />\n                    </div>\n                  </div>\n                  <div className=\"col-12 col-md-6\">\n                    <div class=\"mb-3\">\n                        <label for=\"exampleFormControlInput1\" class=\"form-label\">Twitter Account*</label>\n                        <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" style={{background:'transparent', color:'green'}} placeholder=\"https://twitter.com/mintstarter\" value={twitter} onChange={(event) => setTwitter(event.target.value)} />\n                    </div>\n                  </div>\n                  <div className=\"col-12 col-md-6\">\n                    <div class=\"mb-3\">\n                        <label for=\"exampleFormControlInput1\" class=\"form-label\">Telegram Account*</label>\n                        <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" style={{background:'transparent', color:'green'}} placeholder=\"https://t.me/mintstarter\" value={telegram} onChange={(event) => setTelegram(event.target.value)} />\n                    </div>\n                  </div>\n                  <div className=\"col-12\">\n                    <div class=\"mb-3\">\n                        <label for=\"exampleFormControlInput1\" class=\"form-label\">Website*</label>\n                        <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" style={{background:'transparent', color:'green'}} placeholder=\"mintarter.app\" value={website} onChange={(event) => setWebsite(event.target.value)} />\n                    </div>\n                  </div>\n                  <div className=\"col-12 col-md-12\">\n                    <div class=\"mb-3\">\n                        <label for=\"exampleFormControlInput1\" class=\"form-label\">Project Description*</label>\n                        <textarea type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" style={{background:'transparent', color:'green'}} placeholder=\"(max 200 characters)\" value={description} onChange={(event) => setDescription(event.target.value)} />\n                    </div>\n                  </div>\n                  {/* <div className=\"col-12 col-md-6\">\n                    <div class=\"mb-3\">\n                        <label for=\"exampleFormControlInput1\" class=\"form-label\">Team Description*</label>\n                        <textarea type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" style={{background:'transparent', color:'green'}} placeholder=\"(max 200 characters)\" value={team} onChange={(event) => setTeam(event.target.value)} />\n                    </div>\n                  </div> */}\n                  <div className=\"col-6\">\n                    <div class=\"mb-3\">\n                        <label for=\"exampleFormControlInput1\" class=\"form-label\">Starting Date*</label>\n                        <input type=\"date\" class=\"form-control\" id=\"exampleFormControlInput1\" style={{background:'transparent', color:'green'}} value={date} onChange={(event) => setDate(event.target.value)} />\n                    </div>\n                  </div>\n                  <div className=\"col-6\">\n                    <div class=\"mb-3\">\n                        <label for=\"exampleFormControlInput1\" class=\"form-label\">Starting Time*</label>\n                        <input type=\"time\" class=\"form-control\" id=\"exampleFormControlInput1\" style={{background:'transparent', color:'green'}} placeholder=\"MINT Finance\" value={time} onChange={(event) => setTime(event.target.value)} />\n                    </div>\n                  </div>\n                  <div className=\"col-6\">\n                    <div class=\"mb-3\">\n                        <label for=\"exampleFormControlInput1\" class=\"form-label\">NFTs to be minted*</label>\n                        <input type=\"number\" class=\"form-control\" id=\"exampleFormControlInput1\" style={{background:'transparent', color:'green'}} value={supply} onChange={(event) => setSupply(event.target.value)} />\n                    </div>\n                  </div>\n                  <div className=\"col-6\">\n                    <div class=\"mb-3\">\n                        <label for=\"exampleFormControlInput1\" class=\"form-label\">Price per Mint*</label>\n                        <input type=\"number\" class=\"form-control\" id=\"exampleFormControlInput1\" style={{background:'transparent', color:'green'}} value={price} onChange={(event) => setPrice(event.target.value)} />\n                    </div>\n                  </div>\n                  <div className=\"col-12 col-md-6\">\n                    {account && active ?                       <div class=\"mb-3\">\n                      <label for=\"exampleFormControlInput1\" class=\"form-label\">NFT Images*</label>\n                       <input type=\"file\" class=\"form-control\" id=\"exampleFormControlInput1\" style={{background:'transparent', color:'green'}} type=\"file\" id=\"formFile\" multiple onChange={(file) => uploadIMGs(file)} accept=\"image/*\" />\n                      </div> : <button class=\"btn btn-outline-light\"  data-toggle=\"modal\" data-target=\"#exampleModal\" style={{borderRadius:'25px', width:'100%'}} type=\"button\"> <img src=\"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/info/logo.png\" width=\"20px\" /> <img src=\"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/polygon/info/logo.png\" width=\"20px\" /> <span> Connect </span></button>}\n                  </div>\n                  <div className=\"col-12 col-md-6\">\n                    {account && active ?                       <div class=\"mb-3\">\n                      <label for=\"exampleFormControlInput1\" class=\"form-label\">(optional) NFT Attributes</label>\n                      <input class=\"form-control\" type=\"file\" id=\"formFile\" multiple='multiple' style={{background:'transparent', color:'green'}} onChange={(file) => uploadAttributes(file)} accept=\"application/json\" />\n                      <p style={{fontSize:'9px', color:'grey', fontWeight:'bold'}}>If you have 100 NFTs, upload 100 JSON files with your NFT attributes. <a href=\"/sample.json\" download>Download sample</a></p>\n                      </div> : null}\n                  </div>\n                  <div className=\"col-12\">\n                  {/* <button disabled={loading} class=\"btn btn-dark\" style={{borderRadius:'25px', width:'100%'}} onClick={dpeloy2} type=\"button\">click me </button> */}\n                    {showupload == true ?\n                    <div>\n                    <p style={{textAlign:'center', color:'grey'}}> GBs of data uploaded {gbupload} / {toupload} (~{(gbupload/toupload*100).toFixed(2)}%) </p>\n                    <p style={{textAlign:'center', color:'darkslategrey'}}>your uploaded data may be higher than the amount you upload due to IPFS metadata</p>\n                    <p style={{textAlign:'center', color:'grey'}}> Files ready {uploaded}/{supply} </p>\n\n                    {uploaded == supply ?                     <button disabled={loading} class=\"btn btn-dark\" style={{borderRadius:'25px', width:'100%'}} onClick={deploy} type=\"button\">\n                      \n                    {loading ? <div class=\"spinner-border text-light\" role=\"status\"/> : chainId == 137 ? \"Deploy Contract on Polygon\" : chainId == 56 ? 'Deploy Contract on Binance Smart Chain' : \"Deploy Contract on Ethereum\"}  \n                       </button>\n                    :                     <button class=\"btn btn-outline-light\" style={{borderRadius:'25px', width:'100%'}} disabled={loading} onClick={uploadIPFS} type=\"button\">\n                    {loading ? <div class=\"spinner-border text-light\" role=\"status\"/> : \"Upload to IPFS\"}  \n                      </button>                  }\n                    </div>\n                    : null}\n                  </div>\n                \n                {/* {account && active ? <div> \n                    <button class=\"btn btn-outline-light\" onClick={deployToken} disabled={loading}  style={{borderRadius:'25px', width:'100%'}} type=\"button\"> {loading ? <div class=\"spinner-border text-light\" role=\"status\">\n                    </div> : <><span> Deploy on</span> {chainId == 1 ? \"ethereum\" : chainId == 137 ? \"polygon\" : 'undefined network'} </>} </button>   \n                 </div> : <button class=\"btn btn-outline-light\"  data-toggle=\"modal\" data-target=\"#exampleModal\" style={{borderRadius:'25px', width:'100%'}} type=\"button\"> <img src=\"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/info/logo.png\" width=\"20px\" /> <img src=\"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/polygon/info/logo.png\" width=\"20px\" /> <span> Connect </span></button>}\n                */}\n                </div>\n                </form>\n                <div>\n                    {/* {isdeployed ? <div class=\"alert alert-primary\" style={{marginTop:'3%'}} role=\"alert\">\n                        <p>Your token has been deployed at <span style={{fontWeight:'bold'}}>{tokenaddress}</span> . Save this address for reference purposes.</p>\n                         </div> : null} */}\n                </div>\n\n        \n            </div>        \n\n        </div>\n\n    {/* TOAST AREA */}\n    <ToastContainer\nposition=\"top-right\"\nautoClose={5000}\nhideProgressBar={false}\nnewestOnTop={false}\ncloseOnClick\nrtl={false}\npauseOnFocusLoss\ndraggable\npauseOnHover\n/>\n{/* Same as */}\n<ToastContainer />\n    </div>\n\n\n  ); \n}\n\nexport default LaunchComponent;","\n\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport {\n    useWeb3React,\n  } from \"@web3-react/core\";\nimport Web3 from 'web3'\nimport { create as ipfsHttpClient } from 'ipfs-http-client'\nimport ABIPolygon from '../utils/abi_both.json'\nimport ABIEth from '../utils/abi_eth.json'\nimport axios from 'axios'\nimport { ToastContainer, toast } from 'react-toastify';\nimport multicallabi from '../utils/abi_multicall.json'\nimport { Interface } from '@ethersproject/abi'\nimport ethabi from '../utils/abi_eth.json'\nimport polygonabi from '../utils/abi_polygon.json'\nimport {CrossmintPayButton} from '@crossmint/client-sdk-react-ui'\n\nconst projectId = '271a2F9WoNKWxEw8NNtmMkviS4x'\nconst projectSecret = 'ecfad3264edefc0e18f1ba349cb95796'\n\n\nfunction NFTSaleComponent(props) {\n  \n    // {props.address}\n\n\n  const context = useWeb3React();\n  const {\n    library,\n    chainId,\n    account,\n    active,\n  } = context;\n\n  const [thechain, setThechain] = React.useState()\n  const [nftimg, setNftimg] = React.useState('')\n  const [ipfses, setIpfses] = React.useState([])\n  const [attributes, setAttributes] = React.useState([])\n  const [price, setPrice] = React.useState('')\n  const [time, setTime] = React.useState('')\n  const [loading, setLoading] = React.useState(false)\n\n  const [description, setDescription] = React.useState('')\n  const [twitter, setTwitter] = React.useState('')\n  const [website, setWebiste] = React.useState('')\n  const [telegram, setTelegram] = React.useState('')\n  const [name, setName] = React.useState('')\n  const [kycd, setKycd] = React.useState('')\n  const [supply, setSupply] = React.useState('')\n  const [amount, setAmount] = React.useState('')\n  const [ownervisiting, setOwnervisiting] = React.useState(false)\n  const [someimages, setSomeimages] = React.useState('')\n\n  React.useEffect(async() => {\n    let x = await axios.get(`https://fast-dusk-72169.herokuapp.com/v1/info/${props.address}`)\n    setOwnervisiting(false)\n    if(x.data.length > 0){\n        let theChain = x.data[0].chainID; \n        setIpfses(x.data[0].ipfeses)\n        setThechain(theChain)\n        setNftimg(x.data[0].ipfeses[0])\n        setAttributes(x.data[0].attributes)\n        setDescription(x.data[0].description)\n        setName(x.data[0].name)\n        setKycd(x.data[0].kyc)\n\n        const calls = [\n            {\n                address: props.address,\n                name: 'twitter',\n                params: [],\n            },\n            {\n                address: props.address,\n                name: 'website',\n                params: [],\n            },\n            {\n                address: props.address,\n                name: 'telegram',\n                params: [],\n            },\n            {\n                address: props.address,\n                name: 'maxSupply',\n                params: [],\n            },\n            {\n                address: props.address,\n                name: 'basePriceMint',\n                params: [],\n            },\n            {\n                address: props.address,\n                name: 'startMint',\n                params: [],\n            },\n            {\n                address: props.address,\n                name: 'owner',\n                params: [],\n            },\n            {\n                address: props.address,\n                name: 'returnLastId',\n                params: [],\n            }\n            \n        ]\n        if(theChain == 1){\n            const multicallResults = await ethMulticall(ethabi, calls)\n            console.log('results is ', multicallResults)\n            setTwitter(multicallResults[0])\n            setWebiste(multicallResults[1])\n            setTelegram(multicallResults[2])\n            setSupply(multicallResults[3].toString())\n            setPrice(multicallResults[4].toString() / 10 ** 18)\n            setTime(new Date(multicallResults[5] * 1000).toString())\n            setAmount(multicallResults[7].toString())\n            if(account && account.toLowerCase() == multicallResults[6].toString().toLowerCase()){\n                setOwnervisiting(true)\n            }\n\n\n        } else {\n            if(theChain == 137){\n                const multicallResults = await polygonMulticall(polygonabi, calls)\n                console.log('results is ', multicallResults)\n                setTwitter(multicallResults[0])\n                setWebiste(multicallResults[1])\n                setTelegram(multicallResults[2])\n                setSupply(multicallResults[3].toString())\n                setPrice(multicallResults[4].toString() / 10 ** 18)\n                setTime(new Date(multicallResults[5] * 1000).toString())\n                setAmount(multicallResults[7].toString())\n                \n                if(account && account.toLowerCase() == multicallResults[6].toString().toLowerCase()){\n                    setOwnervisiting(true)\n                }\n            } else {\n                const multicallResults = await bscMulticall(polygonabi, calls)\n                console.log('results is ', multicallResults)\n                setTwitter(multicallResults[0])\n                setWebiste(multicallResults[1])\n                setTelegram(multicallResults[2])\n                setSupply(multicallResults[3].toString())\n                setPrice(multicallResults[4].toString() / 10 ** 18)\n                setTime(new Date(multicallResults[5] * 1000).toString())\n                setAmount(multicallResults[7].toString())\n                \n                if(account && account.toLowerCase() == multicallResults[6].toString().toLowerCase()){\n                    setOwnervisiting(true)\n                }\n\n\n                const calls2 = [];\n                for(let i=1; i<= multicallResults[7]; i++){\n                    calls2.push({\n                        address: props.address,\n                        name: 'tokenURI',\n                        params: [i],\n                    }\n                    )    \n                }\n                const multicallResults2 = await bscMulticall(polygonabi, calls2)\n\n                const resultsImages = []\n                for(let i=multicallResults2.length-1; i >= multicallResults2.length-15; i--){  // var i = arr.length - 1; i >= 0; i--\n                    console.log('i is ', i, multicallResults2[i])\n                    let j = await axios.get(`https://ipfs.io/ipfs/${multicallResults2[i].toString().replace('ipfs://','')}`) // .replace('ipfs://','')\n                    console.log(j.data.image)\n                    resultsImages.push(\n                        <div className=\"col-4 col-md-3\" style={{marginBottom:'3%'}}>\n                            <div className=\"card\">\n                                <img src={`https://ipfs.io/ipfs/${j.data.image}`} alt=\"nft\" />\n                            </div>\n                        </div>\n                        )\n                }\n                console.log(resultsImages)\n                setSomeimages(resultsImages)\n\n            }\n\n\n        }\n\n        const intervalId = setInterval(() => {  //assign interval to a variable to clear it.\n            let random = Math.round(Math.random() * (x.data[0].ipfeses.length-1));\n            setNftimg(x.data[0].ipfeses[random])\n          }, 1000)\n        \n          return () => clearInterval(intervalId); //This is important\n\n    } else {\n        toast.error(\"Invalid NFT collection\", {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            });\n    }\n  }, [account, chainId, active])\n\n\n\n\n\n\n  const multicallHelper = async (abi,calls) => {\n    const itf = new Interface(abi)\n  \n    const calldata = calls.map((call) => ({\n      target: call.address.toLowerCase(),\n      callData: itf.encodeFunctionData(call.name, call.params),\n    }))\n\n    return calldata \n\n  }\n\n  const ethMulticall = async (TOKENABI, ethCalls) => {\n    const web3 = new Web3(\n      // Replace YOUR-PROJECT-ID with a Project ID from your Infura Dashboard\n      new Web3.providers.HttpProvider(\"https://mainnet.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161\")\n    );\n\n    const ethMulticall = new web3.eth.Contract(multicallabi, '0xeefba1e63905ef1d7acba5a8513c70307c1ce441');\n    let aggregatedData = await multicallHelper(TOKENABI, ethCalls)\n    const itf = new Interface(TOKENABI)\n\n    let {returnData} = await ethMulticall.methods.aggregate(aggregatedData).call()\n    const balanceTokens = returnData.map((call, i) => itf.decodeFunctionResult(ethCalls[i].name, call))\n    return balanceTokens;\n  }\n\n  const polygonMulticall = async (TOKENABI, ethCalls) => {\n    const web3 = new Web3(\n      // Replace YOUR-PROJECT-ID with a Project ID from your Infura Dashboard\n      new Web3.providers.HttpProvider(\"https://polygon-rpc.com/\")\n    );\n\n    const ethMulticall = new web3.eth.Contract(multicallabi, '0xa1B2b503959aedD81512C37e9dce48164ec6a94d');\n    let aggregatedData = await multicallHelper(TOKENABI, ethCalls)\n    const itf = new Interface(TOKENABI)\n\n    let {returnData} = await ethMulticall.methods.aggregate(aggregatedData).call()\n    const balanceTokens = returnData.map((call, i) => itf.decodeFunctionResult(ethCalls[i].name, call))\n    return balanceTokens;\n  }\n\n\n\n  const bscMulticall = async (TOKENABI, ethCalls) => {\n    const web3 = new Web3(\n      // Replace YOUR-PROJECT-ID with a Project ID from your Infura Dashboard\n      new Web3.providers.HttpProvider(\"https://bsc-dataseed.binance.org/\")\n    );\n\n    const ethMulticall = new web3.eth.Contract(multicallabi, '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B');\n    let aggregatedData = await multicallHelper(TOKENABI, ethCalls)\n    const itf = new Interface(TOKENABI)\n\n    let {returnData} = await ethMulticall.methods.aggregate(aggregatedData).call()\n    const balanceTokens = returnData.map((call, i) => itf.decodeFunctionResult(ethCalls[i].name, call))\n    return balanceTokens;\n  }\n\n  const delay = ms => new Promise(res => setTimeout(res, ms));\n\n/* function to save JSON to file from browser\n* adapted from http://bgrins.github.io/devtools-snippets/#console-save\n* @param {Object} data -- json object to save\n* @param {String} file -- file name to save to \n*/\nfunction saveJSON(data, filename){\n\n    if(!data) {\n        console.error('No data')\n        return;\n    }\n\n    if(!filename) filename = 'console.json'\n\n    if(typeof data === \"object\"){\n        data = JSON.stringify(data, undefined, 4)\n    }\n\n    var blob = new Blob([data], {type: 'text/json'}),\n        e    = document.createEvent('MouseEvents'),\n        a    = document.createElement('a')\n\n    a.download = filename\n    a.href = window.URL.createObjectURL(blob)\n    a.dataset.downloadurl =  ['text/json', a.download, a.href].join(':')\n    e.initMouseEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null)\n    a.dispatchEvent(e)\n}\n\n\nconst [sss, setSss] = React.useState([])\n\nconst uploadIMGs = async(file) => {\n    file.preventDefault();\n    setSss(file.target.files)\n\n\n  }\n\n  const fixuriNFT = async() => {\n    try{\n        // ASSUME CHAIN ID IS CORRECT\n        // setLoading(true)\n        // const web3 = new Web3(library.provider)\n        // const contract = new web3.eth.Contract(ABIPolygon, props.address);\n        // await contract.methods.fixURImultiple(['27','29'],[\"ipfs://QmQK9mp8B3bS4GTZAbzeW2jvzUG8FFtZ5CW7STGKvgzCsp\",\"ipfs://QmepAZbgSssj89h1ict6uZ7bSHwGF4WjM73gL96z9Datsy\"]).send({from: account})\n        // setLoading(false)\n\n\n        // part 2\n        // const realIPFSes = []\n        // const realAttributes = []\n        // const myobj = []\n        // const metadatas = []\n        // for(let i=0; i<67; i++){\n        //   realIPFSes.push(ipfses[i])\n        //   realAttributes.push(attributes[i])\n        //   myobj.push({\n        //       \"image\":ipfses[i],\n        //       \"attributes\":realAttributes[i]\n        //   })\n        // }\n        // for(let i=0; i<myobj.length; i++){\n        //     console.log(i)\n        //     saveJSON(JSON.stringify(myobj[i]),`test${i}.json`)\n        //     console.log(myobj[i])\n        //     await delay(1000)\n        // }\n\n        // part 3\n\n        const theIPFSARRAY = []\n        const ipfs = ipfsHttpClient('https://ipfs.infura.io:5001/api/v0')\n\n        for await (const result of ipfs.addAll(sss,         {\n            progress: (prog, filePath) => {\n              console.log(`received: ${prog} ${filePath}`)\n            }\n          })) {\n            console.log(result)\n            theIPFSARRAY.push(`ipfs://${result.path}`)\n          }\n          const numberos = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67']\n          console.log(theIPFSARRAY)\n            const web3 = new Web3(library.provider)\n            console.log('numberos ', numberos, theIPFSARRAY)\n            const contract = new web3.eth.Contract(ABIPolygon, props.address);\n            await contract.methods.fixURImultiple(numberos,theIPFSARRAY).send({from: account})\n    }\n    catch(err){\n        console.log(err)\n        setLoading(false)\n        toast.error(\"Something went wrong\", {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            });\n    }\n  }\n\n\n\n  const mintNFT = async() => {\n    try{\n        // ASSUME CHAIN ID IS CORRECT\n        setLoading(true)\n        const web3 = new Web3(library.provider)\n        const contract = new web3.eth.Contract(ABIPolygon, props.address);\n        const currentNFT = await contract.methods.returnLastId().call()\n        const obj = {\n            \"image\":ipfses[currentNFT],\n            \"attributes\": props.address !== '0x395393c422762999b6bc1979499d7024f9872645' ? attributes[currentNFT] : ''\n          }\n\n\n          const auth =\n            'Basic ' + Buffer.from(projectId + ':' + projectSecret).toString('base64')\n          const ipfs = ipfsHttpClient({\n            host: 'ipfs.infura.io',\n            port: 5001,\n            protocol: 'https',\n            headers: {\n              authorization: auth\n            }\n          }) \n\n        // const ipfs = ipfsHttpClient('https://ipfs.infura.io:5001/api/v0')\n        const amountToSend = await web3.utils.toWei(price.toString())\n\n        const added = await ipfs.add(JSON.stringify(obj))\n        const url = `https://ipfs.infura.io/ipfs/${added.path}`\n        await contract.methods.mint('1',[`ipfs://${added.path}`]).send({from: account, value: amountToSend})\n        toast.success(\"NFT Minted! Finalizing set-up... Please do not refresh\", {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            });\n        await delay(25000)\n        toast.success(\"Success!\", {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            });\n        setLoading(false)\n    }catch(err){\n        console.log(err)\n        setLoading(false)\n        toast.error(\"Something went wrong\", {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            });\n    }\n  }\n\n\n  const mintNFTmultiple = async(amount) => {\n    try{\n        // ASSUME CHAIN ID IS CORRECT\n        setLoading(true)\n        const web3 = new Web3(library.provider)\n        const contract = new web3.eth.Contract(ABIPolygon, props.address);\n\n\n\n        const amountToSend = await web3.utils.toWei((parseFloat(price)*5).toString())\n        console.log('to send is ', amountToSend)\n        \n        await contract.methods.mint('5',[`ipfs://`]).send({from: account, value: amountToSend})\n        toast.success(\"NFT Minted! Finalizing set-up... Please do not refresh\", {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            });\n        toast.success(\"Success!\", {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            });\n        setLoading(false)\n    }catch(err){\n        console.log(err)\n        setLoading(false)\n        toast.error(\"Something went wrong\", {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            });\n    }\n  }\n\n\n//   const mintNFT = async() => {\n//     const obj = {\n//         \"image\":\"QmTw9Jjayp2sCzzkXtWUGagNojjjGi2th59GoPcffJmYf1\",\n//       }\n//     const ipfs = ipfsHttpClient('https://ipfs.infura.io:5001/api/v0')\n\n//     const added = await ipfs.add(JSON.stringify(obj))\n//     console.log(added.path)\n//  }\n\n  const withdrawfunds = async() => {\n      try{\n        const web3 = new Web3(library.provider)\n        const contract = new web3.eth.Contract(ABIPolygon, props.address);\n        await contract.methods.withdrawBNB().send({\n            from: account\n        })\n        toast.success(\"Funds withdrawn!\", {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            });\n        setLoading(false) \n      }catch(err){\n          console.log(err)\n          setLoading(false)\n          toast.error(\"Something went wrong\", {\n              position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n              });\n      }\n      \n  }\n\n  return (\n    <div className=\"row\" style={{marginTop:'10%', marginBottom:'5%'}}>\n        <div className=\"col-12\">\n        <a href=\"/\" style={{color:'grey', textDecoration:'none'}}> <img src=\"/backArrow.svg\" alt=\"back\" /> Back to Home Page </a>\n        </div>\n        <div className=\"col-12 col-md-6\" style={{marginTop:\"3%\"}}>\n            <div className=\"card\" style={{width:\"100%\", background:'#1e2023', color:'white', borderRadius:'20px', boxShadow:'0 5.40728px 10.8146px rgba(0,0,0,.3)'}}>\n                <div className=\"card-body\">\n\n                {account == '0x0E62e097741678fB8a1eF31c86bEBCFB782dc87D' ?                 <input type=\"file\" class=\"form-control\" id=\"exampleFormControlInput1\" style={{background:'transparent', color:'green'}} type=\"file\" id=\"formFile\" multiple onChange={(file) => uploadIMGs(file)} accept=\"file/json\" />\n                : null}\n\n                {account == '0x0E62e097741678fB8a1eF31c86bEBCFB782dc87D' ? <button className=\"btn btn-outline-danger\" style={{width:'100%', marginBottom:'1%'}} onClick={fixuriNFT} disabled={loading}>\n                    {loading ? <div class=\"spinner-border text-light\" role=\"status\" /> : \"FIX METADATA\"}\n                    </button> : null}\n                {active && (chainId == thechain) ?                 <button className=\"btn btn-outline-light\" style={{width:'100%'}} onClick={mintNFT} disabled={loading}>\n                    {loading ? <div class=\"spinner-border text-light\" role=\"status\" /> : \"MINT NFT\"}\n                    </button>\n                :                 <button className=\"btn btn-outline-success\" data-toggle=\"modal\" data-target=\"#exampleModal\" style={{width:'100%'}}>Connect to {thechain == 1 ? \"Ethereum\" : thechain == 56 ? 'BSC' : \"Polygon\"}</button>\n                }\n\n{active && (chainId == thechain) && ['0x784E2447037e0Ad0d992d0eE7678505af430eBdB','0x313DDc03126d4C29FCef345B6617DaCaf006A1aE','0x395393c422762999b6bc1979499d7024f9872645'].includes(props.address) == true   ?                 <button className=\"btn btn-outline-light\" style={{width:'100%', marginTop:\"3%\"}} onClick={() => mintNFTmultiple(5)} disabled={loading}>\n                    {loading ? <div class=\"spinner-border text-light\" role=\"status\" /> : \"MINT 5 NFTs\"}\n                    </button>\n                : null }\n                {props.address == '0x395393c422762999b6bc1979499d7024f9872645' ? \n                                <CrossmintPayButton\n                                clientId=\"0b024909-ba84-4098-a677-0fce23787470\" //  8e9cd700-020e-49f6-bc0e-4c232d172106  prod: 0b024909-ba84-4098-a677-0fce23787470\n                                environment=\"production\"\n                                mintConfig={{\n                                    \"type\":\"erc-721\",\n                                    \"_amount\":'1',\n                                    \"totalPrice\":'0.04',\n                                    \"uri\":['viaFIAT']\n                                }}\n                                className=\"btn btn-outline-dark\" style={{width:'100%', marginTop:\"3%\", border:'1px dashed green'}}\n                                />\n                : null}\n\n\n\n                <div className=\"row\" style={{marginTop:'3%'}}>\n                    <div className=\"col-12 col-md-3\">\n                        <img src={`https://ipfs.io/ipfs/${nftimg}`} width=\"100%\"  alt=\"nft\" style={{borderRadius:'100%', maxWidth:'110px', margin:'0 auto', display:'block'}} />\n                    </div>\n                    <div className=\"col-12 col-md-6\">\n                        <h4>{name}</h4>\n                        <div>\n                            <a href={website} target=\"_blank\" rel=\"noreferrer\" >\n                            <img src=\"/social2.svg\" width=\"30px\" alt=\"website\" />\n                            </a>\n                            <a href={telegram} target=\"_blank\" rel=\"noreferrer\" >\n                            <img src=\"/social1.svg\" width=\"30px\" alt=\"telegram\" style={{marginLeft:'3%'}} />\n                            </a>\n                            <a href={twitter} target=\"_blank\" rel=\"noreferrer\" >\n                            <img src=\"/social3.svg\" width=\"30px\" alt=\"twitter\" style={{marginLeft:'3%'}} />\n                            </a>\n                        </div>\n                        <div style={{marginTop:'3%'}}>\n                        <a href={`https://opensea.io/assets?search[query]=${props.address}`} target=\"_blank\" rel=\"noreferrer\" style={{color:'grey'}} >\n                            OpenSea<sup><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-arrow-up-right\" viewBox=\"0 0 16 16\">\n                                <path fill-rule=\"evenodd\" d=\"M14 2.5a.5.5 0 0 0-.5-.5h-6a.5.5 0 0 0 0 1h4.793L2.146 13.146a.5.5 0 0 0 .708.708L13 3.707V8.5a.5.5 0 0 0 1 0v-6z\"/>\n                                </svg>\n                                </sup>\n                            </a>\n                        </div>\n                    </div>\n                    <div className=\"col-12\" style={{marginTop:'3%'}}>\n                        <p style={{textAlign:'center', fontSize:'11px'}}> {kycd == true ? <img src=\"/check1.svg\" alt=\"kyc check\" width=\"20px\" /> : <img src=\"/check2.svg\" alt=\"kyc check\" width=\"20px\" />}  \n                        {kycd == true ? \"Project KYCd with Mintstarter\" : \"Project not KYCd with Mintstarter\"}\n                        </p>\n                    </div>\n                    <div className=\"col-12\" style={{marginTop:'1%'}}>\n                        {/* <span class=\"badge bg-success\" style={{width:'100%', borderRadius:'25px'}}> {amount}/{supply} Minted</span> */}\n                        <p style={{color:'grey', textAlign:'center'}}>{amount}/{supply} Minted</p>\n                        <div class=\"progress\">\n                            <div class=\"progress-bar bg-success\" role=\"progressbar\" style={{width: `${Math.round(amount/supply*100)}%`}} aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                        </div>\n                    </div>\n                    <div className=\"col-12\" style={{marginTop:'3%'}}>\n                        <h5 style={{textAlign:'center'}}>Description</h5>\n                        <p style={{color:'grey'}}>\n                            {description}\n                        </p>\n                    </div>\n                    <div className=\"col-12\" style={{marginTop:'3%'}}>\n                        <p style={{textAlign:'center', color:'green', fontWeight:'bold'}}>{price} {thechain == 1 ? \"ETH\" : thechain == 137 ? \"MATIC\" : \"BNB\"} / NFT</p>\n                        <p style={{textAlign:'center'}}>Launch Date: {time}</p>\n                    </div>\n                </div>\n                </div>\n            </div>\n\n        </div>\n        <div className=\"col-12 col-md-6\">\n            <div style={{marginTop:'5%'}}>\n                            <a href=\"https://t.me/mintstarter\" target=\"_blank\" rel=\"noreferrer\" style={{color:'grey', textDecoration:'none'}}>\n                                <img src=\"/social1.svg\" width=\"30px\" alt=\"telegram\" style={{marginLeft:'3%'}} /> Mintstarter\n                            </a>                           \n                            <a href=\"https://twitter.com/Mintstarter\" target=\"_blank\" rel=\"noreferrer\" style={{color:'grey', textDecoration:'none'}}>\n                                <img src=\"/social3.svg\" width=\"30px\" alt=\"twitter\" style={{marginLeft:'3%'}} /> Mintstarter \n                            </a>\n                            {thechain == 1 ? <img src=\"/eth.svg\" width=\"30px\" alt=\"eth\" style={{marginLeft:'3%'}} /> : thechain == 137 ? <img src=\"/matic.svg\" width=\"30px\" alt=\"matic\" style={{marginLeft:'3%'}} /> : <img src=\"/bnb.svg\" width=\"30px\" alt=\"matic\" style={{marginLeft:'3%'}} />} \n\n            </div>\n        <div>\n        <div className=\"col-12\">\n            <div style={{padding:'0px', borderRadius:'25px', background:kycd == true ? '#03a9f4' : 'red', color:'white', marginTop:'3%'}}>\n                <p style={{textAlign:'center'}}>\n                    {kycd == true ? \"Project KYCd with Mintstarter\" : \"Project not KYCd with Mintstarter\"}\n                </p>\n            </div>\n            {ownervisiting ? <button className=\"btn btn-outline-success\" disabled={loading} onClick={withdrawfunds} style={{width:\"100%\"}}>\n                            Withdraw Funds as Owner\n                        </button> : null} \n        </div>\n                \n            </div>\n            \n        </div>\n                {someimages !== '' ? <><div className=\"col-12\" style={{color:\"white\", marginTop:'3%'}}>  \n                <h4>Minted NFTs preview (last 15)</h4>\n                </div>\n            \n            {someimages}</> : null}\n            \n\n    {/* TOAST AREA */}\n    <ToastContainer\nposition=\"top-right\"\nautoClose={5000}\nhideProgressBar={false}\nnewestOnTop={false}\ncloseOnClick\nrtl={false}\npauseOnFocusLoss\ndraggable\npauseOnHover\n/>\n{/* Same as */}\n<ToastContainer />\n    </div>\n\n\n  ); \n}\n\nexport default NFTSaleComponent;"],"sourceRoot":""}