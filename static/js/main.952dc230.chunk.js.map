{"version":3,"sources":["connectors.js","components/Navbar.js","components/Footer.js","pages/Homepage.js","components/ConnectModal.js","hooks.js","index.js","components/LaunchComponent.js","components/NFTSaleComponent.js"],"names":["RPC_URLS","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","137","1","56","qrcode","NavBar","class","style","minHeight","background","href","marginLeft","src","width","maxWidth","alt","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Footer","Homepage","React","inp","setInp","localinp","setLocalinp","available","setAvailable","brandvalue","setBrandvalue","year","setYear","checkoutid","setCheckoutid","price","setPrice","ordinalsaddr","setOrdinalsaddr","validaddr","setValidaddr","orderplaced","setOrderplaced","expiry","setExpiry","creation","setCreation","txhash","setTxhash","resolver","setResolver","checkBrandValue","domain","a","length","calculatePrice","searchName","toast","error","res","test","console","log","indexOf","promise","checkAvailability","loading","success","web3","Web3","providers","HttpProvider","theString","contract","eth","Contract","ABI","methods","isUsed","toLowerCase","call","expirationDate","expiryDate","creationDate","createDate","txHashCreation","resolverr","date1","Date","parseFloat","date2","toString","checkOrdinalsAddress","ordaddr","startsWith","chargeFailure","chargeSuccess","postOrderInfo","axios","post","Navbar","textAlign","color","fontWeight","fontSize","padding","borderRadius","className","value","onChange","event","target","margin","display","lineHeight","border","placeholder","aria-describedby","onClick","position","reverseOrder","for","selected","disabled","onPaymentDetected","onChargeFailure","checkoutId","rel","replace","connectorsByName","Injected","WalletConnect","ConnectModal","context","useWeb3React","connector","library","chainId","account","activate","deactivate","active","activatingConnector","setActivatingConnector","undefined","suppress","useEffect","ethereum","window","on","handleChainChanged","handleAccountsChanged","accounts","handleNetworkChanged","networkId","removeListener","useInactiveListener","useState","tried","setTried","isAuthorized","then","catch","useEagerConnect","setBlockNumber","stale","getBlockNumber","blockNumber","updateBlockNumber","setEthBalance","getBalance","balance","tabindex","role","aria-labelledby","aria-hidden","data-dismiss","cursor","getLibrary","provider","Web3Provider","pollingInterval","GlobalStyles","createGlobalStyle","App","path","ReactDOM","document","getElementById","auth","Buffer","from","ipfs","ipfsHttpClient","host","port","protocol","apiPath","headers","authorization","LaunchComponent","colname","setColname","symbol","setSymbol","twitter","setTwitter","telegram","setTelegram","website","setWebsite","description","setDescription","supply","setSupply","setLoading","date","setDate","time","setTime","images","setImages","showupload","setShowupload","uploaded","setUploaded","allipfs","setAllipfs","gbupload","setGbpupload","toupload","setToupload","properties","setProperties","uploadIMGs","file","preventDefault","files","alert","parseInt","err","uploadIPFS","arrayToDb","gbpUpload","sizeInBytes","i","size","addAll","progress","prog","filePath","toFixed","result","push","deploy","erroNumber","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","match","utils","toWei","basePrice","d","day","getDay","ABIBoth","Bytecode","BYTECODEBoth","toSend","theAttributes","finalAttributes","readUploadedFileAsText","theFile","JSON","parse","content","attributes","objs","myObjs","stringify","theThing","wrapWithDirectory","cid","startingTime","getTime","data","object","arguments","send","gasLimit","x","_address","location","uploadAttributes","inputFile","temporaryFileReader","FileReader","Promise","resolve","reject","onerror","abort","DOMException","onload","readAsText","marginTop","marginBottom","boxShadow","multiple","accept","download","newestOnTop","rtl","pauseOnFocusLoss","NFTSaleComponent","props","thechain","setThechain","nftimg","setNftimg","ipfses","setIpfses","setAttributes","setWebiste","name","setName","kycd","setKycd","amount","setAmount","ownervisiting","setOwnervisiting","someimages","setSomeimages","get","address","theChain","chainID","ipfeses","kyc","calls","params","ethMulticall","ethabi","multicallResults","polygonMulticall","polygonabi","bscMulticall","calls2","multicallResults2","resultsImages","j","image","intervalId","setInterval","random","Math","round","clearInterval","multicallHelper","abi","itf","Interface","calldata","map","callData","encodeFunctionData","TOKENABI","ethCalls","multicallabi","aggregatedData","aggregate","returnData","balanceTokens","decodeFunctionResult","delay","ms","setTimeout","sss","setSss","fixuriNFT","theIPFSARRAY","numberos","ABIPolygon","fixURImultiple","mintNFT","returnLastId","currentNFT","obj","projectId","amountToSend","add","added","mint","mintNFTmultiple","withdrawfunds","withdrawBNB","textDecoration","includes","clientId","environment","mintConfig","xmlns","height","fill","viewBox","fill-rule","aria-valuenow","aria-valuemin","aria-valuemax"],"mappings":"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","file":"static/js/main.952dc230.chunk.js","sourcesContent":["import { InjectedConnector } from \"@web3-react/injected-connector\";\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\r\n\r\nconst POLLING_INTERVAL = 12000;\r\nconst RPC_URLS = {\r\n  1: \"https://mainnet.infura.io/v3/84842078b09946638c03157f83405213\",\r\n  4: \"https://rinkeby.infura.io/v3/84842078b09946638c03157f83405213\",\r\n  5: \"https://goerli.infura.io/v3/aee4dd30db8a42aa935d0f714ee521ae\",\r\n  56:\"https://bsc-dataseed.binance.org/\",\r\n  137:\"https://rpc.ankr.com/polygon\"\r\n};\r\n\r\nexport const injected = new InjectedConnector({\r\n  supportedChainIds: [1, 56, 137]\r\n});\r\n\r\nexport const walletconnect = new WalletConnectConnector({\r\n  rpc: { 137: RPC_URLS[137], 1: RPC_URLS[1], 56: RPC_URLS[56] },\r\n  qrcode: true\r\n})\r\n\r\n","\n\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nfunction NavBar() {\n  \n\n  return (\n<nav class=\"navbar navbar-expand-lg navbar-dark\" style={{ minHeight:'80px', background:'transparent'}}>\n  <a class=\"navbar-brand\" href=\"/\" style={{marginLeft:\"3%\"}}> <img src=\"/logo.svg\" style={{width:'100%', maxWidth:'200px'}} alt=\"logo\" /> </a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n\n  <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n    <ul class=\"navbar-nav mr-auto\">\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"/\">Home </a>\n      </li>\n      {/* <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"/services\">Services</a>\n      </li> */}\n      {/* <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"https://stake.mintstarter.app\">Staking</a>\n      </li> */}\n      {/* <li class=\"nav-item dropdown\">\n        <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n          Dropdown\n        </a>\n        <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n          <a class=\"dropdown-item\" href=\"#\">Action</a>\n          <a class=\"dropdown-item\" href=\"#\">Another action</a>\n          <div class=\"dropdown-divider\"></div>\n          <a class=\"dropdown-item\" href=\"#\">Something else here</a>\n        </div>\n      </li> */}\n\n    </ul>\n    {/* <div class=\"d-flex\" style={{minWidth:'120px'}}>\n        Mellow\n    </div>\n    <div class=\"d-flex\">\n    <a href=\"https://t.me/mintstarter\" target=\"_blank\" rel=\"noreferrer\">\n    <img src=\"/telegram.svg\" width=\"40px\" />\n    </a>\n    </div> */}\n  </div>\n\n\n</nav>\n\n\n  ); \n}\n\nexport default NavBar;","\n\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\n\n\n\nfunction Footer() {\n  \n\n\n\n\n  return (\n    <footer style={{background:'#1e2023', color:'white', padding:'15px'}}>\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col\">\n                <a href=\"https://twitter.com/Mintstarter\" target=\"_blank\" style={{color:'grey', textDecoration:'none'}}>  <img src=\"/twitter.svg\" width=\"100%\" style={{maxWidth:'40px'}} alt=\"telegram\" /> </a>\n                <a href=\"https://t.me/mintstarter\" target=\"_blank\" style={{color:'grey', textDecoration:'none'}}>    <img src=\"/telegram.svg\" width=\"100%\" style={{maxWidth:'40px'}}alt=\"telegram\" /> </a>\n                {/* <a href=\"https://www.dextools.io/app/ether/pair-explorer/0xa23ad2b0fd9cf4f2a056dc249d95777a6e3b21ac\" target=\"_blank\" style={{color:'grey', textDecoration:'none'}}>    <img src=\"/dextools.png\" width=\"100%\" style={{maxWidth:'40px'}}alt=\"telegram\" /> </a> */}\n\n                </div>\n                <div className=\"col\">\n                    <p>\n                    <a href=\"/terms\" style={{color:'grey', textDecoration:'none'}}>Terms and Conditions</a>\n                    </p>\n                    <a href=\"https://drive.google.com/file/d/1Tmadanp4NcQe05rTWPwRoekQVqsv2Jtv/view\" target=\"_blank\" rel=\"noreferrer\" style={{color:'grey', textDecoration:'none'}}>WhitePaper</a>\n                </div>\n                <div className=\"col\">\n                    <a href=\"/privacy\" style={{color:'grey', textDecoration:'none'}}>Privacy Policy</a>\n                </div>\n                <div className=\"col\">\n                    <a href=\"/\" style={{color:'grey', textDecoration:'none'}}>Mintstarter</a>\n                </div>\n            </div>\n        </div>\n    </footer>\n\n\n  ); \n}\n\nexport default Footer;","import * as React from \"react\";\r\nimport * as ReactDOM from \"react-dom\";\r\nimport {\r\n  Web3ReactProvider,\r\n  useWeb3React,\r\n  UnsupportedChainIdError\r\n} from \"@web3-react/core\";\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\r\n} from \"@web3-react/injected-connector\";\r\nimport { UserRejectedRequestError as UserRejectedRequestErrorFrame } from \"@web3-react/frame-connector\";\r\nimport { Web3Provider } from \"@ethersproject/providers\";\r\nimport { formatEther } from \"@ethersproject/units\";\r\nimport { Toaster, toast } from 'react-hot-toast';\r\nimport { ethers } from 'ethers'\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport axios from 'axios'\r\nimport Web3 from 'web3'\r\nimport Navbar from '../components/Navbar'\r\nimport ABI from '../ABI.json'\r\nimport Footer from '../components/Footer'\r\nimport '../App.css'\r\nimport CoinbaseCommerceButton from 'react-coinbase-commerce';\r\nimport 'react-coinbase-commerce/dist/coinbase-commerce-button.css';\r\n\r\n\r\n\r\nfunction getErrorMessage(error) {\r\n  if (error instanceof NoEthereumProviderError) {\r\n    return \"No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.\";\r\n  } else if (error instanceof UnsupportedChainIdError) {\r\n    return \"You're connected to an unsupported network.\";\r\n  } else if (\r\n    error instanceof UserRejectedRequestErrorInjected ||\r\n    error instanceof UserRejectedRequestErrorFrame\r\n  ) {\r\n    return \"Please authorize this website to access your Ethereum account.\";\r\n  } else {\r\n    console.error(error);\r\n    return \"An unknown error occurred. Check the console for more details.\";\r\n  }\r\n}\r\n\r\n\r\n\r\nfunction Homepage() {\r\n  \r\n\r\n  \r\n  const [inp, setInp] = React.useState('')\r\n  const [localinp, setLocalinp] = React.useState('')\r\n  const [available, setAvailable] = React.useState(false)\r\n  const [brandvalue, setBrandvalue] = React.useState(0) // 0 premium, 1 standard\r\n  const [year, setYear] = React.useState('1')\r\n  const [checkoutid, setCheckoutid] = React.useState('')\r\n  const [price, setPrice] = React.useState('')\r\n  const [ordinalsaddr, setOrdinalsaddr] = React.useState('')\r\n  const [validaddr, setValidaddr] = React.useState(false)\r\n  const [orderplaced, setOrderplaced] = React.useState(false)\r\n  const [expiry, setExpiry] = React.useState('')\r\n  const [creation, setCreation] = React.useState('')\r\n  const [txhash, setTxhash] = React.useState('')\r\n  const [resolver, setResolver] = React.useState('')\r\n\r\n  const checkBrandValue = async(domain) => {\r\n\r\n\r\n    if(domain.length == 3){\r\n      setBrandvalue(0)\r\n    } else {\r\n      if(domain.length == 4){\r\n        setBrandvalue(1)\r\n      } else {\r\n        setBrandvalue(2)\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n\r\n  React.useEffect(() => {\r\n\r\n\r\n    const calculatePrice = async() => {\r\n      if(brandvalue == 0){\r\n        // premium \r\n        switch(year){\r\n          case '5':\r\n            setCheckoutid('57554ccb-a178-4eee-92aa-dcb6b4fe7118')\r\n            setPrice(345)\r\n            break;\r\n          case '4':\r\n            setCheckoutid('a877ccfe-1b2f-4496-b7a1-43f893983f68')\r\n            setPrice(278)\r\n            break;\r\n          case '3':\r\n            setCheckoutid('aa53c0be-5649-4cab-a1b5-2b36e8212b14')\r\n            setPrice(211)\r\n            break;\r\n          case '2':\r\n            setCheckoutid('98752666-4c90-4775-8626-af670b0dd90e')\r\n            setPrice(144)\r\n            break;\r\n          default:\r\n            setCheckoutid('9e0d5b50-a892-4bff-96d1-464d3e959f3d')\r\n            setPrice(77)\r\n            break;\r\n        }\r\n      } else {\r\n        if(brandvalue == 1){\r\n          switch(year){ // 150,120,90,60,30\r\n            case '5':\r\n              setCheckoutid('f3af30aa-ca74-4f1b-b707-1cb84e592576')\r\n              setPrice(160)\r\n              break;\r\n            case '4':\r\n              setCheckoutid('85a94977-beef-4d6a-bce0-d9fd827dc9c0')\r\n              setPrice(130)\r\n              break;\r\n            case '3':\r\n              setCheckoutid('ff54dc09-e869-424d-8f4f-14eba1d20de2')\r\n              setPrice(100)\r\n              break;\r\n            case '2':\r\n              setCheckoutid('48014274-ff21-4d1b-91f5-0fa76d4725c1')\r\n              setPrice(70)\r\n              break;\r\n            default:\r\n              setCheckoutid('4b3e1811-41c6-46ee-8acc-8a15e870d237')\r\n              setPrice(40)\r\n              break;\r\n          }\r\n        } else {\r\n          switch(year){ // 150,120,90,60,30\r\n            case '5':\r\n              setCheckoutid('f76192d5-afe2-4c44-b059-b20104e86299')\r\n              setPrice(44.10)\r\n              break;\r\n            case '4':\r\n              setCheckoutid('1abf115b-8540-448e-a427-cd66dc7e04f3')\r\n              setPrice(37.28)\r\n              break;\r\n            case '3':\r\n              setCheckoutid('721faadf-3409-4a74-adb8-0cacabe6c5d0')\r\n              setPrice(30.46)\r\n              break;\r\n            case '2':\r\n              setCheckoutid('a9efd80c-ce3e-42cd-92fa-52da11110069')\r\n              setPrice(23.60)\r\n              break;\r\n            default:\r\n              setCheckoutid('559bb58c-d871-446e-be80-1b120371901b')\r\n              setPrice(16.82)\r\n              break;\r\n          }\r\n        }\r\n\r\n      }\r\n    }\r\n\r\n    calculatePrice()\r\n\r\n  }, [brandvalue, year])\r\n\r\n\r\n  const searchName = async() => {\r\n    try{\r\n\r\n      if(inp.length < 3){\r\n        toast.error('Minimum domain length is 3 characters!')\r\n        throw 'err';\r\n      }\r\n      \r\n\r\n      if(inp == ''){\r\n        toast.error(\"Name cannot be blank\")\r\n        throw 'err';\r\n      }\r\n\r\n      const specialChars = /[`!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\r\n      const res = specialChars.test(inp)\r\n      console.log(res)\r\n      if(res == true){\r\n        toast.error('name can only be characters and numbers. We attach .btc')\r\n        throw 'err'\r\n      }\r\n\r\n    if(hasWhiteSpace(inp) == true){\r\n      toast.error('Name cannot contain whitespace')\r\n      throw 'err'\r\n    }\r\n\r\n    checkBrandValue(inp)\r\n\r\n    toast.promise(\r\n      checkAvailability(inp),\r\n       {\r\n         loading: 'Checking availability...',\r\n         success: <b>Domain available</b>,\r\n         error: <b>NOT availabe.</b>,\r\n       }\r\n     );\r\n     setLocalinp(inp)\r\n\r\n\r\n\r\n    }catch(err){\r\n      console.log('err ', err)\r\n    }\r\n  }\r\n\r\n\r\n\r\n  const checkAvailability = async(domain) => {\r\n      // address 0x1C60b08ad39b693EF1f6b3BdBfFA6f5B9b34dd47\r\n      const web3 = new Web3(\r\n        // Replace YOUR-PROJECT-ID with a Project ID from your Infura Dashboard\r\n        new Web3.providers.HttpProvider(\"https://nova.arbitrum.io/rpc\t\")\r\n      );\r\n\r\n      const theString = domain+'.btc'\r\n\r\n      const contract = new web3.eth.Contract(ABI, '0x1C60b08ad39b693EF1f6b3BdBfFA6f5B9b34dd47');\r\n      // const toBytes32 = await contract.methods.stringToBytes32(theString).call()\r\n      // console.log(toBytes32)\r\n      const available = await contract.methods.isUsed(theString.toLowerCase()).call()\r\n\r\n      const expiryDate = await contract.methods.expirationDate(theString.toLowerCase()).call()\r\n      console.log('expiry is ', expiryDate)\r\n\r\n      const createDate = await contract.methods.creationDate(theString.toLowerCase()).call()\r\n      const txHashCreation = await contract.methods.txHashCreation(theString.toLowerCase()).call()\r\n      const resolverr = await contract.methods.resolver(theString.toLowerCase()).call()\r\n\r\n      const date1 = new Date(parseFloat(expiryDate))\r\n      const date2 = new Date(parseFloat(createDate))\r\n\r\n      setExpiry(date1.toString())\r\n      setCreation(date2.toString())\r\n      setTxhash(txHashCreation)\r\n      setResolver(resolverr)\r\n      setAvailable(false)\r\n\r\n      if(available == true){\r\n\r\n\r\n        throw 'not available';\r\n      }\r\n      setAvailable(true)\r\n\r\n\r\n  }\r\n\r\n  const checkOrdinalsAddress = async(ordaddr) => {\r\n    if(ordaddr.startsWith('bc1') == true){\r\n      setOrdinalsaddr(ordaddr)\r\n      setValidaddr(true)\r\n    } else {\r\n      toast.error('This ordinals address is invalid')\r\n    }\r\n  }\r\n\r\n\r\n  const chargeFailure = async() => {\r\n    toast.error('Something went wrong')\r\n  }\r\n\r\n  const chargeSuccess = async() => {\r\n    \r\n    toast.promise(\r\n      postOrderInfo(),\r\n       {\r\n         loading: 'Do not close this page...',\r\n         success: <b>Order Placed!</b>,\r\n         error: <b>Something went wrong with your order.</b>,\r\n       }\r\n     );\r\n\r\n\r\n  }\r\n\r\n  const postOrderInfo = async() => {\r\n    await axios.post('https://fierce-plains-92629.herokuapp.com/recordInfo', {\r\n      \"address\":ordinalsaddr,\r\n      \"years\":year,\r\n      \"name\":localinp+'.btc'\r\n    })\r\n    setOrderplaced(true)\r\n  }\r\n\r\n  function hasWhiteSpace(s) {\r\n    return s.indexOf(' ') >= 0;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n    <div style={{background:'linear-gradient(90deg,#513eff 0%,#52e5ff 100%)'}}>\r\n      <Navbar />\r\n      <div>\r\n        <h1 style={{textAlign:'center', color:'whitesmoke', fontWeight:'bold'}}>\r\n        Decentralised naming for wallets, websites, & more.\r\n        </h1>\r\n        <br />\r\n        <h1 style={{textAlign:'center', fontSize:'3rem', color:'white', fontWeight:'bold'}}>\r\n        Your <span style={{padding:'5px', background:' #f2a900', borderRadius:\"10px\"}}>.BTC</span> domain powered by Ordinals.\r\n        </h1>\r\n        <br />\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              <div class=\"input-group mb-3\">\r\n                <input value={inp} onChange={(event) => setInp(event.target.value)}  style={{width:'100%', maxWidth:'462px', margin:'0 auto', display:'block', padding:'10px', lineHeight:'2.125rem', fontSize:'1.625rem', border:'3px solid rgb(232, 232, 232)', borderRadius:'10px'}} type=\"text\" class=\"form-control\" placeholder=\"search for a name\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-12\">\r\n              <div class=\"input-group-append\">\r\n                <button onClick={searchName} class=\"btn btn-light\" type=\"button\" style={{margin:'0 auto', fontSize:'1.5rem'}}>Search</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <br />\r\n\r\n      </div>\r\n      {/* <Footer /> */}\r\n\r\n      <Toaster\r\n        position=\"top-center\"\r\n        reverseOrder={false}\r\n      />\r\n   </div>\r\n   <br />\r\n   {localinp !== '' ? \r\n      <div className=\"container\" style={{textAlign:'center'}}>\r\n      <div className=\"row\">\r\n        <div className=\"col-6\">\r\n                <h4>{localinp}.btc</h4>\r\n            </div>\r\n            <div className=\"col-6\">\r\n                <h4>{available == true ? 'Available' : 'Not Available'}</h4>\r\n        </div>\r\n      </div>\r\n     </div>\r\n   : null}\r\n\r\n   {available == true ?     <div className=\"container\" style={{textAlign:'center'}}>\r\n    {orderplaced == true ? <div className=\"row\">\r\n      <div className=\"col-12\">\r\n        <p style={{fontWeight:'bold', color:'white', background:'orange'}}>Order in progress. It may take up to few minutes to an hour \r\n        before you get your delivery depending on the btc network. </p>\r\n      </div>\r\n       </div> : null}\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-md-6\">\r\n          <label class=\"mr-sm-2\" for=\"inlineFormCustomSelect\">Ordinals Receiving Address</label>\r\n          <input onChange={(event) => checkOrdinalsAddress(event.target.value)}  style={{width:'100%', maxWidth:'462px', border:'3px solid rgb(232, 232, 232)', borderRadius:'10px'}} type=\"text\" class=\"form-control\" placeholder=\"bc1qu23uv24rcw8wptptzrtx0ckay74859rzkjnpg4\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\" />\r\n        </div>\r\n        <div className=\"col-12 col-md-6\">\r\n          <label class=\"mr-sm-2\" for=\"inlineFormCustomSelect\">Registration Period </label>\r\n          <select class=\"custom-select mr-sm-2\" id=\"inlineFormCustomSelect\" onChange={(event) => setYear(event.target.value)}>\r\n            <option selected value=\"1\">1 year</option>\r\n            <option value=\"2\">2 years</option>\r\n            <option value=\"3\">3 years</option>\r\n            <option value=\"4\">4 years</option>\r\n            <option value=\"5\">5 years</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"col-12\">\r\n          <br />\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <h4>You are about to buy <span style={{fontWeight:'bold'}}>{localinp}.btc</span></h4>\r\n              {brandvalue == 0 ? <p className=\"badge badge-dark\">This is a PREMIUM domain</p> : <p className=\"badge badge-secondary\">This is a STANDARD domain</p>}\r\n              <h4>{year} year(s) </h4>\r\n              <h4 style={{color:'red'}}>Service Fee including gas <span style={{color:'#07da63', fontWeight:'bold'}}> (50% discount)</span>: </h4>\r\n              <h4 style={{fontWeight:'bold', color:'#07da63'}}>€{price} </h4>\r\n              <CoinbaseCommerceButton disabled={!validaddr} className=\"btn btn-primary\" onPaymentDetected={chargeSuccess} onChargeFailure={chargeFailure} checkoutId={checkoutid} />\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <img src=\"/pay_with_coinbase.png\" style={{width:'100%', maxWidth:'156px', margin:'0 auto', display:'block'}} alt=\"pay with coinbase\" />\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <img src=\"/allcoins.svg\" style={{width:'100%', maxWidth:'156px', margin:'0 auto', display:'block'}} alt=\"pay with coinbase\" />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <br />\r\n\r\n    </div> : \r\n    localinp !== '' ?\r\n     <div className=\"container\" style={{textAlign:'center'}}>\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            Owner: {resolver}\r\n          </div>\r\n          <div className=\"col-12\">\r\n            Create Date: {creation}\r\n          </div>\r\n          <div className=\"col-12\">\r\n            Create Date: {expiry}\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <a href={`https://ordinals.com/preview/${txhash}`} target=\"_blank\" rel=\"noreferrer\">\r\n              View Inscription\r\n            </a>\r\n          </div>\r\n          <div className=\"col-12\">\r\n            <a href={`https://www.blockchain.com/explorer/transactions/btc/${txhash.replace('i0','')}`} target=\"_blank\" rel=\"noreferrer\">\r\n              View on Bitcoin Mainnet\r\n            </a>\r\n          </div>\r\n\r\n          \r\n        </div>\r\n    </div>\r\n    : null\r\n    }\r\n\r\n\r\n   <Toaster\r\n        position=\"top-center\"\r\n        reverseOrder={false}\r\n      />\r\n   </div>\r\n\r\n  ); \r\n}\r\n\r\nexport default Homepage;","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport {\n    Web3ReactProvider,\n    useWeb3React,\n    UnsupportedChainIdError\n  } from \"@web3-react/core\";\n  \n  \n  import 'react-toastify/dist/ReactToastify.css';\n  import {\n    injected,\n    walletconnect,\n  } from \"../connectors\";\n  import { useEagerConnect, useInactiveListener } from \"../hooks\";\n  import Web3 from 'web3'\n  \n  const connectorsByName = {\n    Injected: injected,\n    WalletConnect: walletconnect\n  };\n\n\n\nfunction ConnectModal() {\n  \n    const context = useWeb3React();\n    const {\n      connector,\n      library,\n      chainId,\n      account,\n      activate,\n      deactivate,\n      active,\n      error\n    } = context;\n  \n    // handle logic to recognize the connector currently being activated\n    const [activatingConnector, setActivatingConnector] = React.useState();\n    React.useEffect(() => {\n      console.log('running')\n      if (activatingConnector && activatingConnector === connector) {\n        setActivatingConnector(undefined);\n      }\n    }, [activatingConnector, connector]);\n  \n    // handle logic to eagerly connect to the injected ethereum provider, if it exists and has granted access already\n    const triedEager = useEagerConnect();\n  \n    // handle logic to connect in reaction to certain events on the injected ethereum provider, if it exists\n    useInactiveListener(!triedEager || !!activatingConnector);\n  \n    // set up block listener\n    const [blockNumber, setBlockNumber] = React.useState();\n    React.useEffect(() => {\n      console.log('running')\n      if (library) {\n        let stale = false;\n  \n        console.log('fetching block number!!')\n        library\n          .getBlockNumber()\n          .then(blockNumber => {\n            if (!stale) {\n              setBlockNumber(blockNumber);\n            }\n          })\n          .catch(() => {\n            if (!stale) {\n              setBlockNumber(null);\n            }\n          });\n  \n        const updateBlockNumber = blockNumber => {\n          setBlockNumber(blockNumber);\n        };\n        library.on(\"block\", updateBlockNumber);\n  \n        return () => {\n          library.removeListener(\"block\", updateBlockNumber);\n          stale = true;\n          setBlockNumber(undefined);\n        };\n      }\n    }, [library, chainId]);\n  \n    // fetch eth balance of the connected account\n    const [ethBalance, setEthBalance] = React.useState();\n    React.useEffect(() => {\n      if (library && account) {\n        let stale = false;\n  \n        library\n          .getBalance(account)\n          .then(balance => {\n            if (!stale) {\n              setEthBalance(balance);\n            }\n          })\n          .catch(() => {\n            if (!stale) {\n              setEthBalance(null);\n            }\n          });\n  \n        return () => {\n          stale = true;\n          setEthBalance(undefined);\n        };\n      }\n    }, [library, account, chainId]);\n  \n  \n  \n  \n  \n  \n  \n    const truncateRegex = /^(0x[a-zA-Z0-9]{4})[a-zA-Z0-9]+([a-zA-Z0-9]{4})$/;\n  \n    const truncateEthAddress = (address) => {\n      if(address !== undefined){\n      const match = address.match(truncateRegex);\n      if (!match) return address;\n      return `${match[1]}…${match[2]}`;\n      }\n    };\n\n  return (\n    <div>\n        <div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n        <div class=\"modal-dialog\" role=\"document\">\n            <div class=\"modal-content\">\n            <div class=\"modal-header\">\n                <h5 class=\"modal-title\" id=\"exampleModalLabel\">Connect Wallet</h5>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n                </button>\n            </div>\n            <div class=\"modal-body\">\n                <div className=\"row\">\n                    {account && active ? <div>\n                        <p style={{textAlign:'center'}}>Connected as <span style={{fontWeight:'bold'}}>{account}</span> </p>\n                        <p style={{textAlign:'center'}}>on {chainId == 1 ? \"Ethereum\" : chainId == 137 ? \"Polygon\" : chainId == 56 ? 'Binance Smart Chain' : \"Unsupported chain\"}</p>\n                        <p style={{textAlign:'center', color:'grey'}}>If you want to change your chain, do it manually in your wallet </p>\n                        <button className=\"btn btn-outline-dark\" style={{width:'100%'}} onClick={() =>               deactivate()}>Disconnect</button>\n                        </div> : <div style={{ width:'100%'}}>\n                            <p style={{textAlign:'center'}}>Connect to Ethereum, Polygon or Binance Smart Chain</p>\n                            <div className=\"row\">\n                                <div className=\"col\" style={{cursor:'pointer'}} onClick={() => {\n                                setActivatingConnector(connectorsByName[\"Injected\"]);\n                                activate(connectorsByName[\"Injected\"]);\n                                }}>\n                                <img src=\"/metamask.png\" width=\"100%\" alt=\"metamask\" />\n                                </div>\n                                <div className=\"col\" style={{cursor:'pointer'}} onClick={() => {\n                                setActivatingConnector(connectorsByName[\"WalletConnect\"]);\n                                activate(connectorsByName[\"WalletConnect\"]);\n                                }}>\n                                <img src=\"/walletconnect.png\" width=\"100%\" alt=\"walletconnect\" />\n\n                                </div>\n                                <div className=\"col\" style={{cursor:'pointer'}} onClick={() => {\n                                setActivatingConnector(connectorsByName[\"Injected\"]);\n                                activate(connectorsByName[\"Injected\"]);\n                                }}>\n                                <img src=\"/trustwallet.svg\" width=\"100%\" alt=\"trustwallet\" />\n\n                                </div>\n                            </div>\n                            </div>}\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-dark\" data-dismiss=\"modal\">Close</button>\n            </div>\n            </div>\n        </div>\n        </div>\n\n\n    </div>\n\n\n  ); \n}\n\nexport default ConnectModal;\n","import { useState, useEffect } from \"react\";\r\nimport { useWeb3React } from \"@web3-react/core\";\r\n\r\nimport { injected } from \"./connectors\";\r\n\r\nexport function useEagerConnect() {\r\n  const { activate, active } = useWeb3React();\r\n\r\n  const [tried, setTried] = useState(false);\r\n\r\n  useEffect(() => {\r\n    injected.isAuthorized().then(isAuthorized => {\r\n      if (isAuthorized) {\r\n        \r\n        activate(injected, undefined, true).catch(() => {\r\n          setTried(true);\r\n        });\r\n      } else {\r\n        setTried(true);\r\n      }\r\n    });\r\n  }, [activate]); // intentionally only running on mount (make sure it's only mounted once :))\r\n\r\n  // if the connection worked, wait until we get confirmation of that to flip the flag\r\n  useEffect(() => {\r\n    if (!tried && active) {\r\n      setTried(true);\r\n    }\r\n  }, [tried, active]);\r\n\r\n  return tried;\r\n}\r\n\r\nexport function useInactiveListener(suppress = false) {\r\n  const { active, error, activate } = useWeb3React();\r\n\r\n  useEffect(() => {\r\n    const { ethereum } = window;\r\n    if (ethereum && ethereum.on && !active && !error && !suppress) {\r\n      const handleChainChanged = chainId => {\r\n        console.log(\"chainChanged\", chainId);\r\n        activate(injected);\r\n      };\r\n\r\n      const handleAccountsChanged = accounts => {\r\n        console.log(\"accountsChanged\", accounts);\r\n        if (accounts.length > 0) {\r\n          activate(injected);\r\n        }\r\n      };\r\n\r\n      const handleNetworkChanged = networkId => {\r\n        console.log(\"networkChanged\", networkId);\r\n        activate(injected);\r\n      };\r\n\r\n      ethereum.on(\"chainChanged\", handleChainChanged);\r\n      ethereum.on(\"accountsChanged\", handleAccountsChanged);\r\n      ethereum.on(\"networkChanged\", handleNetworkChanged);\r\n\r\n      return () => {\r\n        if (ethereum.removeListener) {\r\n          ethereum.removeListener(\"chainChanged\", handleChainChanged);\r\n          ethereum.removeListener(\"accountsChanged\", handleAccountsChanged);\r\n          ethereum.removeListener(\"networkChanged\", handleNetworkChanged);\r\n        }\r\n      };\r\n    }\r\n\r\n    return () => {};\r\n  }, [active, error, suppress, activate]);\r\n}\r\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport {\n  Web3ReactProvider,\n  useWeb3React,\n  UnsupportedChainIdError\n} from \"@web3-react/core\";\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected\n} from \"@web3-react/injected-connector\";\nimport { UserRejectedRequestError as UserRejectedRequestErrorFrame } from \"@web3-react/frame-connector\";\nimport { Web3Provider } from \"@ethersproject/providers\";\nimport { formatEther } from \"@ethersproject/units\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport { createGlobalStyle } from \"styled-components\";\n// import Analytics from './Analytics';\n// import Project from './Project';\nimport { MoralisProvider } from \"react-moralis\";\n\n\nimport {\n  injected,\n} from \"./connectors\";\nimport Homepage from './pages/Homepage';\nimport KYC from './pages/KYC';\nimport NFTDROP from './pages/NFTDrop';\nimport DEX from './pages/Dex'\nimport Launch from './pages/Launch'\nimport Services from './pages/Services'\nimport NFTSale from './pages/Nftsale'\nimport TokenCreator from './pages/TokenCreator'\nimport ConnectModal from './components/ConnectModal'\n// import Token from './Token';\n\n\nimport './home.css'\n\nconst connectorsByName = {\n  Injected: injected\n};\n\nfunction getErrorMessage(error) {\n  if (error instanceof NoEthereumProviderError) {\n    return \"No Ethereum browser extension detected, install MetaMask on desktop or visit from a dApp browser on mobile.\";\n  } else if (error instanceof UnsupportedChainIdError) {\n    return \"You're connected to an unsupported network.\";\n  } else if (\n    error instanceof UserRejectedRequestErrorInjected ||\n    error instanceof UserRejectedRequestErrorFrame\n  ) {\n    return \"Please authorize this website to access your Ethereum account.\";\n  } else {\n    console.error(error);\n    return \"An unknown error occurred. Check the console for more details.\";\n  }\n}\n\nfunction getLibrary(provider) {\n  const library = new Web3Provider(provider);\n  library.pollingInterval = 8000;\n  return library;\n}\n\nconst GlobalStyles = createGlobalStyle`\n  body {\n    // font-family: 'OpenSans';\n    height: 100%;\n    font-family: 'Quicksand', sans-serif;\n  }\n`\n\nfunction App() {\n  return (\n    <Router>\n    <div>\n\n    <GlobalStyles />\n<Web3ReactProvider getLibrary={getLibrary}>\n<ConnectModal />\n\n          <Switch>  \n\n          <Route path=\"/\">\n            <Homepage />\n          </Route>\n        </Switch>\n    </Web3ReactProvider>\n\n    </div>\n    </Router>\n  );\n}\n\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","\n\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport {\n    useWeb3React,\n  } from \"@web3-react/core\";\nimport Web3 from 'web3'\nimport { create as ipfsHttpClient } from 'ipfs-http-client'\nimport ABIPolygon from '../utils/abi_polygon.json'\nimport BYTECODEPolygon from '../utils/bytecode_polygon.json'\nimport ABIEth from '../utils/abi_eth.json'\nimport BYTECODEEth from '../utils/bytecode_eth.json'\nimport ABIBoth from '../utils/PRO_abi.json'\nimport BYTECODEBoth from '../utils/PRO_bytecode.json'\nimport axios from 'axios'\nimport { ToastContainer, toast } from 'react-toastify';\n\nconst auth = 'Basic ' + Buffer.from('271a2F9WoNKWxEw8NNtmMkviS4x' + ':' + 'ecfad3264edefc0e18f1ba349cb95796').toString('base64')\n\nconst ipfs = ipfsHttpClient({\n  host: 'ipfs.infura.io',\n  port: 5001,\n  protocol: 'https',\n  apiPath:'/api/v0',\n  headers: {\n    authorization: auth\n    }\n})\n\n\nfunction LaunchComponent() {\n  \n\n  const [colname, setColname] = React.useState('')\n  const [symbol, setSymbol] = React.useState('')\n  const [twitter, setTwitter] = React.useState('')\n  const [telegram, setTelegram] = React.useState('')\n  const [website, setWebsite] = React.useState('')\n  const [description, setDescription] = React.useState('')\n  const [team, setTeam] = React.useState('')\n  const [supply, setSupply] = React.useState('')\n  const [loading, setLoading] = React.useState(false)\n  const [date, setDate] = React.useState('')\n  const [time, setTime] = React.useState('')\n  const [price, setPrice] = React.useState('')\n  const [images, setImages] = React.useState([])\n  const [showupload, setShowupload] = React.useState(false)\n  const [uploaded, setUploaded] = React.useState(0)\n  const [allipfs, setAllipfs] = React.useState(0)\n  const [gbupload, setGbpupload] = React.useState(0)\n  const [toupload, setToupload] = React.useState(0)\n  const [properties, setProperties] = React.useState([])\n\n  const context = useWeb3React();\n  const {\n    library,\n    chainId,\n    account,\n    active,\n  } = context;\n\n\n\n\n  // const deployToken = async() => {\n  //     try{\n  //       setLoading(true)\n  //       if(account && (chainId == 1 || chainId == 137)){\n  //           const web3 = new Web3(library.provider)\n  //           const contract = new web3.eth.Contract(ABI);\n  //           const amount = supply * 10 ** decimals;\n  //           const amountToPay = chainId == 1 ? '100000000000000000' : '200000000000000000000'\n  //           console.log(toFixed(amount))\n  //           let x = await contract.deploy({\n  //               data: BYTECODE.object,\n  //               arguments: [name.toString(), symbol.toString(), decimals.toString(), account.toString(), toFixed(amount), amountToPay.toString()]\n  //                 }).send({\n  //                   from: account,\n  //                   value: amountToPay\n  //                 })\n  //           setLoading(false)\n  //           setIsdeployed(true)\n  //           setTokenaddress(x._address)\n  //     }\n  //     }catch(err){\n  //       alert(\"something went wrong deploying your token\")\n  //       console.log(err)\n  //       setLoading(false)\n  //     }\n\n  // }\n\n  const uploadIMGs = async(file) => {\n    file.preventDefault();\n    try{\n      console.log(file)\n      console.log(file.target.files)\n      console.log(file.target.files.length)\n      if(file.target.files.length > 5000){\n        setShowupload(false)\n        alert(\"you have uploaded more files than allowed\");\n      } else {\n        if(file.target.files.length !== parseInt(supply)){\n          setShowupload(false)\n          alert(`You must upload ${supply} NFT images`)\n        } else {\n          console.log(file.target.files)\n          setImages(file.target.files)\n          setShowupload(true)\n          // await showAttributes(file.target.files)\n        }\n      }\n\n    }catch(err){\n      setShowupload(false)\n      console.log(err)\n    }\n\n  }\n\n  const uploadIPFS = async() => {\n    try{\n      setLoading(true)\n      const arrayToDb = []\n      let gbpUpload = 0;\n      let sizeInBytes = 0;\n\n      for(let i=0; i<images.length; i++){\n        sizeInBytes = sizeInBytes+images[i].size\n      }\n\n      setToupload(sizeInBytes / 10 ** 9)\n      for await (const result of ipfs.addAll(images,         {\n        progress: (prog, filePath) => {\n          console.log(`received: ${prog} ${filePath}`)\n          gbpUpload = gbpUpload + (prog / 10 ** 9)\n          setGbpupload(gbpUpload.toFixed(6))\n        }\n      })) {\n        console.log(result)\n        arrayToDb.push(result.path)\n        setUploaded(arrayToDb.length)\n      }\n      setAllipfs(arrayToDb)\n      // const objs = []\n      // for(let i=0; i<arrayToDb.length; i++){\n      //   objs.push({\"image\":`ipfs://${arrayToDb[i]}`})\n      // }\n      // console.log(objs)\n\n      // const myObjs = [{ path: '1', content: JSON.stringify(objs[0]) }, { path: '2', content: JSON.stringify(objs[1]) }]\n\n      // for await (const result of ipfs.addAll(myObjs,         {\n      //   wrapWithDirectory: true,\n      //   progress: (prog, filePath) => {\n      //     console.log(`received: ${prog} ${filePath}`)\n      //     gbpUpload = gbpUpload + (prog / 10 ** 9)\n      //     setGbpupload(gbpUpload.toFixed(6))\n      //   }\n      // })) {\n      //   console.log('new result is ', result)\n      //   arrayToDb.push(result.path)\n      //   setUploaded(arrayToDb.length)\n      // }\n\n\n\n      setLoading(false)\n      // console.log(\"x is \", x)\n    }catch(err){\n      console.log(\"error is \", err)\n      alert(\"an error has occured\")\n      setLoading(false)\n    }\n  }\n\n  // validate domain \n//   function frmValidate( domain ) {\n//     // since domain could have subdomain like qwe.asd.zxc,\n//     // parse into substrings at \".\"\n//     var dParts = domain.split('.');\n//     // capture tld from end of list\n//     var tld = dParts[dParts.length - 1];\n//     // determine whether tld is \"com\" or \"net\"\n//     var isValid = ('com' === tld) || ('net' === tld) || ('io' === tld) || ('org' === tld);\n//     // for testing\n//     // alert('top level domain is: ' + tld + ' and is ' + (isValid?'':'NOT ') + 'valid');\n//     // advise caller\n//     return isValid;\n// };\n\nfunction frmValidate(string) {\n  var res = string.match(/(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/g);\n  return (res !== null)\n}; \n\n\nfunction shuffle(sourceArray) {\n  for (var i = 0; i < sourceArray.length - 1; i++) {\n      var j = i + Math.floor(Math.random() * (sourceArray.length - i));\n\n      var temp = sourceArray[j];\n      sourceArray[j] = sourceArray[i];\n      sourceArray[i] = temp;\n  }\n  return sourceArray;\n}\n\nconst dpeloy2 = async() => {\n  try{\n    let theAttributes = properties;\n    let finalAttributes = []\n    for(let i=0; i<theAttributes.length; i++){\n      let theFile = await readUploadedFileAsText(theAttributes[i])\n      let content = await JSON.parse(theFile)\n      finalAttributes.push(content.attributes)\n    }\n    console.log('final is ', finalAttributes)\n    let objs = []\n    let angelicObjects = []\n    let superRares = []\n    let regulars = []\n\n\n    \n    for(let i=0; i<5000; i++){\n\n      if (finalAttributes[i].filter(e => e.value === 'Angelic').length > 0 && angelicObjects.length < 14) {\n        /* vendors contains the element we're looking for */\n        angelicObjects.push({\"image\":`ipfs://QmUUbapHPkRWgvYKoVNvD4SSgS7upyfWMd2HL5y9QT6EiR/${i+1}.png`,\"attributes\":finalAttributes[i]})\n      }else {\n        if ((finalAttributes[i].filter(e => e.value === 'Icedragon').length > 0 || finalAttributes[i].filter(e => e.value === 'FireDragon').length > 0 || finalAttributes[i].filter(e => e.value === 'Blackdragon').length > 0) && superRares.length < 9 && finalAttributes[i].filter(e => e.value === 'Legendaryframebadge').length >0 == false ) {\n          superRares.push({\"image\":`ipfs://QmUUbapHPkRWgvYKoVNvD4SSgS7upyfWMd2HL5y9QT6EiR/${i+1}.png`,\"attributes\":finalAttributes[i]})\n        } else {\n          if(regulars.length < 40){\n            regulars.push({\"image\":`ipfs://QmUUbapHPkRWgvYKoVNvD4SSgS7upyfWMd2HL5y9QT6EiR/${i+1}.png`,\"attributes\":finalAttributes[i]})     \n          } else {\n            objs.push({\"image\":`ipfs://QmUUbapHPkRWgvYKoVNvD4SSgS7upyfWMd2HL5y9QT6EiR/${i+1}.png`,\"attributes\":finalAttributes[i]})     \n          }\n        }\n      }\n        \n      // for(let j=0; j<finalAttributes[i].length; j++){\n      //   for (const [key, value] of Object.entries(finalAttributes[i][j])) {\n          \n      //     if((value == 'Angelic' || value == 'Beast' || value == 'Demonic') && angelicObjects.length < 14){\n      //       angelicObjects.push({\"image\":`ipfs://QmUUbapHPkRWgvYKoVNvD4SSgS7upyfWMd2HL5y9QT6EiR/${i+1}.png`,\"attributes\":finalAttributes[i]})\n      //     } else {\n      //       if((value == 'Icedragon' || value == 'Firedragon' || value == 'Blackdragon') && superRares.length <9 && !(value == 'Blackdragon' && superRares.length !== 8)){\n      //         superRares.push({\"image\":`ipfs://QmUUbapHPkRWgvYKoVNvD4SSgS7upyfWMd2HL5y9QT6EiR/${i+1}.png`,\"attributes\":finalAttributes[i]})\n      //       } else {\n      //           objs.push({\"image\":`ipfs://QmUUbapHPkRWgvYKoVNvD4SSgS7upyfWMd2HL5y9QT6EiR/${i+1}.png`,\"attributes\":finalAttributes[i]})     \n      //       }\n\n            \n      //     }\n      //   }\n      // }\n\n    }\n\n    console.log('angelic objects ', angelicObjects)\n    console.log('super rare ', superRares)\n    console.log('regulars are ', regulars)\n    console.log('regulars ', angelicObjects.length, superRares.length, regulars.length, objs.length)\n\n    objs = await shuffle(objs)\n\n    let children = superRares.concat(angelicObjects);\n    children = children.concat(regulars)\n    children = children.concat(objs)\n    console.log('children are ', children, children.length)\n    // console.log(objs)\n    let myObjs = []\n\n    \n    for(let i=0; i<children.length; i++){\n      myObjs.push({\n        path:i.toString(),\n        content:JSON.stringify(children[i])\n      })\n    }\n\n    console.log('start ipfs')\n    let theThing = ''\n\n    for await (const result of ipfs.addAll(myObjs,         {\n      wrapWithDirectory: true,\n      progress: (prog, filePath) => {\n        console.log(`received: ${prog} ${filePath}`)\n      }\n    })) {\n      console.log('new result is ', result)\n      if(result.path == ''){\n        // console.log(result.cid.toString())\n        theThing = `ipfs://${result.cid.toString()}/`\n      }\n    }\n\n    console.log('the ting is ', theThing)\n\n  }catch(err){\n    console.log('err is ', err)\n  }\n}\n\n  const deploy = async () => {\n    try{\n      let erroNumber = 0;\n      if(telegram.toLowerCase().startsWith('https://t.me/') == false){\n        toast.error('Telegram must start with \"https://t.me/\"', {\n          position: \"top-right\",\n          autoClose: 15000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          });\n        erroNumber += 1;\n      }\n      if(twitter.toLowerCase().startsWith('https://twitter.com/') == false){\n        toast.error('Twiter must start with \"https://twitter.com/\"', {\n          position: \"top-right\",\n          autoClose: 15000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          });\n        erroNumber += 1;\n      }\n\n      if(frmValidate(website) == false){\n        toast.error('You must pass a valid domain', {\n          position: \"top-right\",\n          autoClose: 15000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          });\n        erroNumber += 1;\n      }\n\n      if(description == '' || description.length > 200){\n        toast.error('Your description can be a maximum of 200 characters', {\n          position: \"top-right\",\n          autoClose: 15000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          });\n        erroNumber += 1;\n      }\n\n      // if(team == '' || team.length > 200){\n      //   toast.error('Your TEAM description can be a maximum of 200 characters', {\n      //     position: \"top-right\",\n      //     autoClose: 15000,\n      //     hideProgressBar: false,\n      //     closeOnClick: true,\n      //     pauseOnHover: true,\n      //     draggable: true,\n      //     progress: undefined,\n      //     });\n      //   erroNumber += 1;\n      // }\n\n      if(supply < 2){\n        toast.error('Minimum supply is 2 NFTs', {\n          position: \"top-right\",\n          autoClose: 15000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          });\n        erroNumber += 1;\n      }\n\n      if(price <= 0){\n        toast.error('Provide a price for minting your NFT', {\n          position: \"top-right\",\n          autoClose: 15000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          });\n        erroNumber += 1;\n      }\n\n      if(erroNumber == 0){\n        setLoading(true)\n        const web3 = new Web3(library.provider)\n        let basePrice = await web3.utils.toWei(price);\n        let toSend;\n        let ABI;\n        let Bytecode\n        const d = new Date();\n        let day = d.getDay();\n\n        if(chainId == 137){\n          // ABI = ABIPolygon\n          // Bytecode = BYTECODEPolygon\n          ABI = ABIBoth;\n          Bytecode = BYTECODEBoth;\n          // toSend = '0'\n          if(supply <= 1000){\n\n            if(day >= 5 && day <= 7){\n              toSend = '55000000000000000000' // \n            } else {\n              toSend = '110000000000000000000'\n            }\n          } else {\n            if(supply <= 5000){\n              if(day >= 5 && day <= 7){\n                toSend = '90000000000000000000'\n              } else {\n                toSend = '180000000000000000000'\n              }\n            } else {\n              if(day >= 5 && day <= 7){\n                toSend = '175000000000000000000'\n              } else {\n                toSend = '350000000000000000000'\n              }\n            }\n          }\n        } else {\n\n          if(chainId == 56){ // 0.75BNB , 1000-5000 1.5bnb and 500-10000 \n            ABI = ABIBoth;\n            Bytecode = BYTECODEBoth;\n            if(supply <= 1000){\n                  toSend = '750000000000000000'\n            } else {\n              if(supply <= 5000){\n                  toSend = '1500000000000000000'\n              } else {\n                  toSend = '2500000000000000000'\n              }\n            }\n          }\n          else{\n          // ABI = ABIEth\n          // Bytecode = BYTECODEEth\n          ABI = ABIBoth;\n          Bytecode = BYTECODEBoth;\n          // toSend = '0'\n          if(supply <= 1000){\n            if(day >= 5 && day <= 7){\n              toSend = '30000000000000000'\n            } else {\n              toSend = '60000000000000000'\n            }\n          } else {\n            if(supply <= 5000){\n              if(day >= 5 && day <= 7){\n                toSend = '100000000000000000' //  50000000000000000\n              } else {\n                toSend = '100000000000000000'\n              }\n            } else {\n              if(day >= 5 && day <= 7){\n                toSend = '100000000000000000'\n              } else {\n                toSend = '200000000000000000'\n              }\n            }\n          }\n        }\n      }\n        \n        let theAttributes = properties;\n        let finalAttributes = []\n        for(let i=0; i<theAttributes.length; i++){\n          let theFile = await readUploadedFileAsText(theAttributes[i])\n          let content = await JSON.parse(theFile)\n          finalAttributes.push(content.attributes)\n        }\n\n\n        const objs = []\n        for(let i=0; i<allipfs.length; i++){\n          objs.push({\"image\":`ipfs://${allipfs[i]}`,\"attributes\":finalAttributes[i]})\n        }\n        console.log(objs)\n        const myObjs = []\n        for(let i=0; i<objs.length; i++){\n          myObjs.push({\n            path:i.toString(),\n            content:JSON.stringify(objs[i])\n          })\n        }\n        console.log('final to upload is ', myObjs)\n\n        let theThing = ''\n\n        for await (const result of ipfs.addAll(myObjs,         {\n          wrapWithDirectory: true,\n          progress: (prog, filePath) => {\n            console.log(`received: ${prog} ${filePath}`)\n          }\n        })) {\n          console.log('new result is ', result)\n          if(result.path == ''){\n            // console.log(result.cid.toString())\n            theThing = `ipfs://${result.cid.toString()}/`\n          }\n        }\n\n\n        let startingTime = new Date(`${date} ${time}`)\n        startingTime = startingTime.getTime() / 1000\n\n\n        const contract = new web3.eth.Contract(ABI);\n        let x = await contract.deploy({\n          data: Bytecode.object,\n          arguments: [colname,symbol,\"0\",basePrice.toString(),startingTime.toString(),supply.toString(), twitter.toString(), website.toString(), telegram.toString(),theThing]\n            }).send({\n              from: account,\n              gasLimit:'5000000',\n              value:toSend\n            })\n        console.log(\"x is \", x)\n        console.log('objs is ', {\n            \"chainID\":chainId,\n            \"address\":x._address,\n            \"ipfeses\":allipfs,\n            \"creator\":account,\n            \"startingTime\":startingTime.toString(),\n            \"name\":colname,\n            \"price\":price,\n            \"attributes\":finalAttributes,\n            \"description\":description\n          })\n        await axios.post('https://fast-dusk-72169.herokuapp.com/recordInfo', {\n          \"chainID\":chainId,\n          \"address\":x._address,\n          \"ipfeses\":allipfs,\n          \"creator\":account,\n          \"startingTime\":startingTime.toString(),\n          \"name\":colname,\n          \"price\":price,\n          \"attributes\":finalAttributes,\n          \"description\":description\n        })\n\n        setLoading(false)\n        window.location.href = `/project/${x._address}`\n      }\n\n\n    }catch(err){\n      setLoading(false)\n    }\n  }\n\n\n  const uploadAttributes = async(file) => {\n    file.preventDefault();\n    try{\n      console.log(file)\n      console.log(file.target.files)\n      console.log(file.target.files.length)\n      if(file.target.files.length > 5000){\n        toast.error('you have uploaded more files than allowed', {\n          position: \"top-right\",\n          autoClose: 10000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          });\n      } else {\n        if(file.target.files.length !== parseInt(supply)){\n          alert(`You must upload ${supply} attribute .JSON files`)\n        } else {\n          setProperties(file.target.files)\n          // await showAttributes(file.target.files)\n        }\n      }\n\n    }catch(err){\n      console.log(err)\n    }\n\n  }\n\n  \n  const readUploadedFileAsText = (inputFile) => {\n    const temporaryFileReader = new FileReader();\n  \n    return new Promise((resolve, reject) => {\n      temporaryFileReader.onerror = () => {\n        temporaryFileReader.abort();\n        reject(new DOMException(\"Problem parsing input file.\"));\n      };\n  \n      temporaryFileReader.onload = () => {\n        resolve(temporaryFileReader.result);\n      };\n      temporaryFileReader.readAsText(inputFile);\n    });\n  };\n\n  return (\n    <div className=\"row\" style={{marginTop:'10%', marginBottom:'5%'}}>\n        <div className=\"card\" style={{width:\"100%\", background:'#1e2023', color:'white', borderRadius:'20px', boxShadow:'0 5.40728px 10.8146px rgba(0,0,0,.3)'}}>\n            <div className=\"card-body\">\n                <img src=\"/minter.svg\" width=\"100%\" alt=\"kyc\" style={{maxWidth:'150px', margin:'0 auto', display:'block'}} />\n                <h5 style={{textAlign:'center'}}>\n                NFT Sale Creator\n                </h5>\n                <p style={{textAlign:'center', color:'grey'}}>\n                Launch your NFT collection and sell it on Mintstarter\n                </p>\n                <form>\n                <div className=\"row\">\n                <div className=\"col-6\">\n                    <div class=\"mb-3\">\n                        <label for=\"exampleFormControlInput1\" class=\"form-label\">Collection Name*</label>\n                        <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" style={{background:'transparent', color:'green'}} placeholder=\"MINT Collection\" value={colname} onChange={(event) => setColname(event.target.value)} />\n                    </div>\n                  </div>\n                  <div className=\"col-6\">\n                    <div class=\"mb-3\">\n                        <label for=\"exampleFormControlInput1\" class=\"form-label\">Collection Symbol*</label>\n                        <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" style={{background:'transparent', color:'green'}} placeholder=\"MINT\" value={symbol} onChange={(event) => setSymbol(event.target.value)} />\n                    </div>\n                  </div>\n                  <div className=\"col-12 col-md-6\">\n                    <div class=\"mb-3\">\n                        <label for=\"exampleFormControlInput1\" class=\"form-label\">Twitter Account*</label>\n                        <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" style={{background:'transparent', color:'green'}} placeholder=\"https://twitter.com/mintstarter\" value={twitter} onChange={(event) => setTwitter(event.target.value)} />\n                    </div>\n                  </div>\n                  <div className=\"col-12 col-md-6\">\n                    <div class=\"mb-3\">\n                        <label for=\"exampleFormControlInput1\" class=\"form-label\">Telegram Account*</label>\n                        <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" style={{background:'transparent', color:'green'}} placeholder=\"https://t.me/mintstarter\" value={telegram} onChange={(event) => setTelegram(event.target.value)} />\n                    </div>\n                  </div>\n                  <div className=\"col-12\">\n                    <div class=\"mb-3\">\n                        <label for=\"exampleFormControlInput1\" class=\"form-label\">Website*</label>\n                        <input type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" style={{background:'transparent', color:'green'}} placeholder=\"mintarter.app\" value={website} onChange={(event) => setWebsite(event.target.value)} />\n                    </div>\n                  </div>\n                  <div className=\"col-12 col-md-12\">\n                    <div class=\"mb-3\">\n                        <label for=\"exampleFormControlInput1\" class=\"form-label\">Project Description*</label>\n                        <textarea type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" style={{background:'transparent', color:'green'}} placeholder=\"(max 200 characters)\" value={description} onChange={(event) => setDescription(event.target.value)} />\n                    </div>\n                  </div>\n                  {/* <div className=\"col-12 col-md-6\">\n                    <div class=\"mb-3\">\n                        <label for=\"exampleFormControlInput1\" class=\"form-label\">Team Description*</label>\n                        <textarea type=\"text\" class=\"form-control\" id=\"exampleFormControlInput1\" style={{background:'transparent', color:'green'}} placeholder=\"(max 200 characters)\" value={team} onChange={(event) => setTeam(event.target.value)} />\n                    </div>\n                  </div> */}\n                  <div className=\"col-6\">\n                    <div class=\"mb-3\">\n                        <label for=\"exampleFormControlInput1\" class=\"form-label\">Starting Date*</label>\n                        <input type=\"date\" class=\"form-control\" id=\"exampleFormControlInput1\" style={{background:'transparent', color:'green'}} value={date} onChange={(event) => setDate(event.target.value)} />\n                    </div>\n                  </div>\n                  <div className=\"col-6\">\n                    <div class=\"mb-3\">\n                        <label for=\"exampleFormControlInput1\" class=\"form-label\">Starting Time*</label>\n                        <input type=\"time\" class=\"form-control\" id=\"exampleFormControlInput1\" style={{background:'transparent', color:'green'}} placeholder=\"MINT Finance\" value={time} onChange={(event) => setTime(event.target.value)} />\n                    </div>\n                  </div>\n                  <div className=\"col-6\">\n                    <div class=\"mb-3\">\n                        <label for=\"exampleFormControlInput1\" class=\"form-label\">NFTs to be minted*</label>\n                        <input type=\"number\" class=\"form-control\" id=\"exampleFormControlInput1\" style={{background:'transparent', color:'green'}} value={supply} onChange={(event) => setSupply(event.target.value)} />\n                    </div>\n                  </div>\n                  <div className=\"col-6\">\n                    <div class=\"mb-3\">\n                        <label for=\"exampleFormControlInput1\" class=\"form-label\">Price per Mint*</label>\n                        <input type=\"number\" class=\"form-control\" id=\"exampleFormControlInput1\" style={{background:'transparent', color:'green'}} value={price} onChange={(event) => setPrice(event.target.value)} />\n                    </div>\n                  </div>\n                  <div className=\"col-12 col-md-6\">\n                    {account && active ?                       <div class=\"mb-3\">\n                      <label for=\"exampleFormControlInput1\" class=\"form-label\">NFT Images*</label>\n                       <input type=\"file\" class=\"form-control\" id=\"exampleFormControlInput1\" style={{background:'transparent', color:'green'}} type=\"file\" id=\"formFile\" multiple onChange={(file) => uploadIMGs(file)} accept=\"image/*\" />\n                      </div> : <button class=\"btn btn-outline-light\"  data-toggle=\"modal\" data-target=\"#exampleModal\" style={{borderRadius:'25px', width:'100%'}} type=\"button\"> <img src=\"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/info/logo.png\" width=\"20px\" /> <img src=\"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/polygon/info/logo.png\" width=\"20px\" /> <span> Connect </span></button>}\n                  </div>\n                  <div className=\"col-12 col-md-6\">\n                    {account && active ?                       <div class=\"mb-3\">\n                      <label for=\"exampleFormControlInput1\" class=\"form-label\">(optional) NFT Attributes</label>\n                      <input class=\"form-control\" type=\"file\" id=\"formFile\" multiple='multiple' style={{background:'transparent', color:'green'}} onChange={(file) => uploadAttributes(file)} accept=\"application/json\" />\n                      <p style={{fontSize:'9px', color:'grey', fontWeight:'bold'}}>If you have 100 NFTs, upload 100 JSON files with your NFT attributes. <a href=\"/sample.json\" download>Download sample</a></p>\n                      </div> : null}\n                  </div>\n                  <div className=\"col-12\">\n                  {/* <button disabled={loading} class=\"btn btn-dark\" style={{borderRadius:'25px', width:'100%'}} onClick={dpeloy2} type=\"button\">click me </button> */}\n                    {showupload == true ?\n                    <div>\n                    <p style={{textAlign:'center', color:'grey'}}> GBs of data uploaded {gbupload} / {toupload} (~{(gbupload/toupload*100).toFixed(2)}%) </p>\n                    <p style={{textAlign:'center', color:'darkslategrey'}}>your uploaded data may be higher than the amount you upload due to IPFS metadata</p>\n                    <p style={{textAlign:'center', color:'grey'}}> Files ready {uploaded}/{supply} </p>\n\n                    {uploaded == supply ?                     <button disabled={loading} class=\"btn btn-dark\" style={{borderRadius:'25px', width:'100%'}} onClick={deploy} type=\"button\">\n                      \n                    {loading ? <div class=\"spinner-border text-light\" role=\"status\"/> : chainId == 137 ? \"Deploy Contract on Polygon\" : chainId == 56 ? 'Deploy Contract on Binance Smart Chain' : \"Deploy Contract on Ethereum\"}  \n                       </button>\n                    :                     <button class=\"btn btn-outline-light\" style={{borderRadius:'25px', width:'100%'}} disabled={loading} onClick={uploadIPFS} type=\"button\">\n                    {loading ? <div class=\"spinner-border text-light\" role=\"status\"/> : \"Upload to IPFS\"}  \n                      </button>                  }\n                    </div>\n                    : null}\n                  </div>\n                \n                {/* {account && active ? <div> \n                    <button class=\"btn btn-outline-light\" onClick={deployToken} disabled={loading}  style={{borderRadius:'25px', width:'100%'}} type=\"button\"> {loading ? <div class=\"spinner-border text-light\" role=\"status\">\n                    </div> : <><span> Deploy on</span> {chainId == 1 ? \"ethereum\" : chainId == 137 ? \"polygon\" : 'undefined network'} </>} </button>   \n                 </div> : <button class=\"btn btn-outline-light\"  data-toggle=\"modal\" data-target=\"#exampleModal\" style={{borderRadius:'25px', width:'100%'}} type=\"button\"> <img src=\"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/info/logo.png\" width=\"20px\" /> <img src=\"https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/polygon/info/logo.png\" width=\"20px\" /> <span> Connect </span></button>}\n                */}\n                </div>\n                </form>\n                <div>\n                    {/* {isdeployed ? <div class=\"alert alert-primary\" style={{marginTop:'3%'}} role=\"alert\">\n                        <p>Your token has been deployed at <span style={{fontWeight:'bold'}}>{tokenaddress}</span> . Save this address for reference purposes.</p>\n                         </div> : null} */}\n                </div>\n\n        \n            </div>        \n\n        </div>\n\n    {/* TOAST AREA */}\n    <ToastContainer\nposition=\"top-right\"\nautoClose={5000}\nhideProgressBar={false}\nnewestOnTop={false}\ncloseOnClick\nrtl={false}\npauseOnFocusLoss\ndraggable\npauseOnHover\n/>\n{/* Same as */}\n<ToastContainer />\n    </div>\n\n\n  ); \n}\n\nexport default LaunchComponent;","\n\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport {\n    useWeb3React,\n  } from \"@web3-react/core\";\nimport Web3 from 'web3'\nimport { create as ipfsHttpClient } from 'ipfs-http-client'\nimport ABIPolygon from '../utils/abi_both.json'\nimport ABIEth from '../utils/abi_eth.json'\nimport axios from 'axios'\nimport { ToastContainer, toast } from 'react-toastify';\nimport multicallabi from '../utils/abi_multicall.json'\nimport { Interface } from '@ethersproject/abi'\nimport ethabi from '../utils/abi_eth.json'\nimport polygonabi from '../utils/abi_polygon.json'\nimport {CrossmintPayButton} from '@crossmint/client-sdk-react-ui'\n\nconst projectId = '271a2F9WoNKWxEw8NNtmMkviS4x'\nconst projectSecret = 'ecfad3264edefc0e18f1ba349cb95796'\n\n\nfunction NFTSaleComponent(props) {\n  \n    // {props.address}\n\n\n  const context = useWeb3React();\n  const {\n    library,\n    chainId,\n    account,\n    active,\n  } = context;\n\n  const [thechain, setThechain] = React.useState()\n  const [nftimg, setNftimg] = React.useState('')\n  const [ipfses, setIpfses] = React.useState([])\n  const [attributes, setAttributes] = React.useState([])\n  const [price, setPrice] = React.useState('')\n  const [time, setTime] = React.useState('')\n  const [loading, setLoading] = React.useState(false)\n\n  const [description, setDescription] = React.useState('')\n  const [twitter, setTwitter] = React.useState('')\n  const [website, setWebiste] = React.useState('')\n  const [telegram, setTelegram] = React.useState('')\n  const [name, setName] = React.useState('')\n  const [kycd, setKycd] = React.useState('')\n  const [supply, setSupply] = React.useState('')\n  const [amount, setAmount] = React.useState('')\n  const [ownervisiting, setOwnervisiting] = React.useState(false)\n  const [someimages, setSomeimages] = React.useState('')\n\n  React.useEffect(async() => {\n    let x = await axios.get(`https://fast-dusk-72169.herokuapp.com/v1/info/${props.address}`)\n    setOwnervisiting(false)\n    if(x.data.length > 0){\n        let theChain = x.data[0].chainID; \n        setIpfses(x.data[0].ipfeses)\n        setThechain(theChain)\n        setNftimg(x.data[0].ipfeses[0])\n        setAttributes(x.data[0].attributes)\n        setDescription(x.data[0].description)\n        setName(x.data[0].name)\n        setKycd(x.data[0].kyc)\n\n        const calls = [\n            {\n                address: props.address,\n                name: 'twitter',\n                params: [],\n            },\n            {\n                address: props.address,\n                name: 'website',\n                params: [],\n            },\n            {\n                address: props.address,\n                name: 'telegram',\n                params: [],\n            },\n            {\n                address: props.address,\n                name: 'maxSupply',\n                params: [],\n            },\n            {\n                address: props.address,\n                name: 'basePriceMint',\n                params: [],\n            },\n            {\n                address: props.address,\n                name: 'startMint',\n                params: [],\n            },\n            {\n                address: props.address,\n                name: 'owner',\n                params: [],\n            },\n            {\n                address: props.address,\n                name: 'returnLastId',\n                params: [],\n            }\n            \n        ]\n        if(theChain == 1){\n            const multicallResults = await ethMulticall(ethabi, calls)\n            console.log('results is ', multicallResults)\n            setTwitter(multicallResults[0])\n            setWebiste(multicallResults[1])\n            setTelegram(multicallResults[2])\n            setSupply(multicallResults[3].toString())\n            setPrice(multicallResults[4].toString() / 10 ** 18)\n            setTime(new Date(multicallResults[5] * 1000).toString())\n            setAmount(multicallResults[7].toString())\n            if(account && account.toLowerCase() == multicallResults[6].toString().toLowerCase()){\n                setOwnervisiting(true)\n            }\n\n\n        } else {\n            if(theChain == 137){\n                const multicallResults = await polygonMulticall(polygonabi, calls)\n                console.log('results is ', multicallResults)\n                setTwitter(multicallResults[0])\n                setWebiste(multicallResults[1])\n                setTelegram(multicallResults[2])\n                setSupply(multicallResults[3].toString())\n                setPrice(multicallResults[4].toString() / 10 ** 18)\n                setTime(new Date(multicallResults[5] * 1000).toString())\n                setAmount(multicallResults[7].toString())\n                \n                if(account && account.toLowerCase() == multicallResults[6].toString().toLowerCase()){\n                    setOwnervisiting(true)\n                }\n            } else {\n                const multicallResults = await bscMulticall(polygonabi, calls)\n                console.log('results is ', multicallResults)\n                setTwitter(multicallResults[0])\n                setWebiste(multicallResults[1])\n                setTelegram(multicallResults[2])\n                setSupply(multicallResults[3].toString())\n                setPrice(multicallResults[4].toString() / 10 ** 18)\n                setTime(new Date(multicallResults[5] * 1000).toString())\n                setAmount(multicallResults[7].toString())\n                \n                if(account && account.toLowerCase() == multicallResults[6].toString().toLowerCase()){\n                    setOwnervisiting(true)\n                }\n\n\n                const calls2 = [];\n                for(let i=1; i<= multicallResults[7]; i++){\n                    calls2.push({\n                        address: props.address,\n                        name: 'tokenURI',\n                        params: [i],\n                    }\n                    )    \n                }\n                const multicallResults2 = await bscMulticall(polygonabi, calls2)\n\n                const resultsImages = []\n                for(let i=multicallResults2.length-1; i >= multicallResults2.length-15; i--){  // var i = arr.length - 1; i >= 0; i--\n                    console.log('i is ', i, multicallResults2[i])\n                    let j = await axios.get(`https://ipfs.io/ipfs/${multicallResults2[i].toString().replace('ipfs://','')}`) // .replace('ipfs://','')\n                    console.log(j.data.image)\n                    resultsImages.push(\n                        <div className=\"col-4 col-md-3\" style={{marginBottom:'3%'}}>\n                            <div className=\"card\">\n                                <img src={`https://ipfs.io/ipfs/${j.data.image}`} alt=\"nft\" />\n                            </div>\n                        </div>\n                        )\n                }\n                console.log(resultsImages)\n                setSomeimages(resultsImages)\n\n            }\n\n\n        }\n\n        const intervalId = setInterval(() => {  //assign interval to a variable to clear it.\n            let random = Math.round(Math.random() * (x.data[0].ipfeses.length-1));\n            setNftimg(x.data[0].ipfeses[random])\n          }, 1000)\n        \n          return () => clearInterval(intervalId); //This is important\n\n    } else {\n        toast.error(\"Invalid NFT collection\", {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            });\n    }\n  }, [account, chainId, active])\n\n\n\n\n\n\n  const multicallHelper = async (abi,calls) => {\n    const itf = new Interface(abi)\n  \n    const calldata = calls.map((call) => ({\n      target: call.address.toLowerCase(),\n      callData: itf.encodeFunctionData(call.name, call.params),\n    }))\n\n    return calldata \n\n  }\n\n  const ethMulticall = async (TOKENABI, ethCalls) => {\n    const web3 = new Web3(\n      // Replace YOUR-PROJECT-ID with a Project ID from your Infura Dashboard\n      new Web3.providers.HttpProvider(\"https://mainnet.infura.io/v3/9aa3d95b3bc440fa88ea12eaa4456161\")\n    );\n\n    const ethMulticall = new web3.eth.Contract(multicallabi, '0xeefba1e63905ef1d7acba5a8513c70307c1ce441');\n    let aggregatedData = await multicallHelper(TOKENABI, ethCalls)\n    const itf = new Interface(TOKENABI)\n\n    let {returnData} = await ethMulticall.methods.aggregate(aggregatedData).call()\n    const balanceTokens = returnData.map((call, i) => itf.decodeFunctionResult(ethCalls[i].name, call))\n    return balanceTokens;\n  }\n\n  const polygonMulticall = async (TOKENABI, ethCalls) => {\n    const web3 = new Web3(\n      // Replace YOUR-PROJECT-ID with a Project ID from your Infura Dashboard\n      new Web3.providers.HttpProvider(\"https://polygon-rpc.com/\")\n    );\n\n    const ethMulticall = new web3.eth.Contract(multicallabi, '0xa1B2b503959aedD81512C37e9dce48164ec6a94d');\n    let aggregatedData = await multicallHelper(TOKENABI, ethCalls)\n    const itf = new Interface(TOKENABI)\n\n    let {returnData} = await ethMulticall.methods.aggregate(aggregatedData).call()\n    const balanceTokens = returnData.map((call, i) => itf.decodeFunctionResult(ethCalls[i].name, call))\n    return balanceTokens;\n  }\n\n\n\n  const bscMulticall = async (TOKENABI, ethCalls) => {\n    const web3 = new Web3(\n      // Replace YOUR-PROJECT-ID with a Project ID from your Infura Dashboard\n      new Web3.providers.HttpProvider(\"https://bsc-dataseed.binance.org/\")\n    );\n\n    const ethMulticall = new web3.eth.Contract(multicallabi, '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B');\n    let aggregatedData = await multicallHelper(TOKENABI, ethCalls)\n    const itf = new Interface(TOKENABI)\n\n    let {returnData} = await ethMulticall.methods.aggregate(aggregatedData).call()\n    const balanceTokens = returnData.map((call, i) => itf.decodeFunctionResult(ethCalls[i].name, call))\n    return balanceTokens;\n  }\n\n  const delay = ms => new Promise(res => setTimeout(res, ms));\n\n/* function to save JSON to file from browser\n* adapted from http://bgrins.github.io/devtools-snippets/#console-save\n* @param {Object} data -- json object to save\n* @param {String} file -- file name to save to \n*/\nfunction saveJSON(data, filename){\n\n    if(!data) {\n        console.error('No data')\n        return;\n    }\n\n    if(!filename) filename = 'console.json'\n\n    if(typeof data === \"object\"){\n        data = JSON.stringify(data, undefined, 4)\n    }\n\n    var blob = new Blob([data], {type: 'text/json'}),\n        e    = document.createEvent('MouseEvents'),\n        a    = document.createElement('a')\n\n    a.download = filename\n    a.href = window.URL.createObjectURL(blob)\n    a.dataset.downloadurl =  ['text/json', a.download, a.href].join(':')\n    e.initMouseEvent('click', true, false, window, 0, 0, 0, 0, 0, false, false, false, false, 0, null)\n    a.dispatchEvent(e)\n}\n\n\nconst [sss, setSss] = React.useState([])\n\nconst uploadIMGs = async(file) => {\n    file.preventDefault();\n    setSss(file.target.files)\n\n\n  }\n\n  const fixuriNFT = async() => {\n    try{\n        // ASSUME CHAIN ID IS CORRECT\n        // setLoading(true)\n        // const web3 = new Web3(library.provider)\n        // const contract = new web3.eth.Contract(ABIPolygon, props.address);\n        // await contract.methods.fixURImultiple(['27','29'],[\"ipfs://QmQK9mp8B3bS4GTZAbzeW2jvzUG8FFtZ5CW7STGKvgzCsp\",\"ipfs://QmepAZbgSssj89h1ict6uZ7bSHwGF4WjM73gL96z9Datsy\"]).send({from: account})\n        // setLoading(false)\n\n\n        // part 2\n        // const realIPFSes = []\n        // const realAttributes = []\n        // const myobj = []\n        // const metadatas = []\n        // for(let i=0; i<67; i++){\n        //   realIPFSes.push(ipfses[i])\n        //   realAttributes.push(attributes[i])\n        //   myobj.push({\n        //       \"image\":ipfses[i],\n        //       \"attributes\":realAttributes[i]\n        //   })\n        // }\n        // for(let i=0; i<myobj.length; i++){\n        //     console.log(i)\n        //     saveJSON(JSON.stringify(myobj[i]),`test${i}.json`)\n        //     console.log(myobj[i])\n        //     await delay(1000)\n        // }\n\n        // part 3\n\n        const theIPFSARRAY = []\n        const ipfs = ipfsHttpClient('https://ipfs.infura.io:5001/api/v0')\n\n        for await (const result of ipfs.addAll(sss,         {\n            progress: (prog, filePath) => {\n              console.log(`received: ${prog} ${filePath}`)\n            }\n          })) {\n            console.log(result)\n            theIPFSARRAY.push(`ipfs://${result.path}`)\n          }\n          const numberos = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31', '32', '33', '34', '35', '36', '37', '38', '39', '40', '41', '42', '43', '44', '45', '46', '47', '48', '49', '50', '51', '52', '53', '54', '55', '56', '57', '58', '59', '60', '61', '62', '63', '64', '65', '66', '67']\n          console.log(theIPFSARRAY)\n            const web3 = new Web3(library.provider)\n            console.log('numberos ', numberos, theIPFSARRAY)\n            const contract = new web3.eth.Contract(ABIPolygon, props.address);\n            await contract.methods.fixURImultiple(numberos,theIPFSARRAY).send({from: account})\n    }\n    catch(err){\n        console.log(err)\n        setLoading(false)\n        toast.error(\"Something went wrong\", {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            });\n    }\n  }\n\n\n\n  const mintNFT = async() => {\n    try{\n        // ASSUME CHAIN ID IS CORRECT\n        setLoading(true)\n        const web3 = new Web3(library.provider)\n        const contract = new web3.eth.Contract(ABIPolygon, props.address);\n        const currentNFT = await contract.methods.returnLastId().call()\n        const obj = {\n            \"image\":ipfses[currentNFT],\n            \"attributes\": props.address !== '0x395393c422762999b6bc1979499d7024f9872645' ? attributes[currentNFT] : ''\n          }\n\n\n          const auth =\n            'Basic ' + Buffer.from(projectId + ':' + projectSecret).toString('base64')\n          const ipfs = ipfsHttpClient({\n            host: 'ipfs.infura.io',\n            port: 5001,\n            protocol: 'https',\n            headers: {\n              authorization: auth\n            }\n          }) \n\n        // const ipfs = ipfsHttpClient('https://ipfs.infura.io:5001/api/v0')\n        const amountToSend = await web3.utils.toWei(price.toString())\n\n        const added = await ipfs.add(JSON.stringify(obj))\n        const url = `https://ipfs.infura.io/ipfs/${added.path}`\n        await contract.methods.mint('1',[`ipfs://${added.path}`]).send({from: account, value: amountToSend})\n        toast.success(\"NFT Minted! Finalizing set-up... Please do not refresh\", {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            });\n        await delay(25000)\n        toast.success(\"Success!\", {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            });\n        setLoading(false)\n    }catch(err){\n        console.log(err)\n        setLoading(false)\n        toast.error(\"Something went wrong\", {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            });\n    }\n  }\n\n\n  const mintNFTmultiple = async(amount) => {\n    try{\n        // ASSUME CHAIN ID IS CORRECT\n        setLoading(true)\n        const web3 = new Web3(library.provider)\n        const contract = new web3.eth.Contract(ABIPolygon, props.address);\n\n\n\n        const amountToSend = await web3.utils.toWei((parseFloat(price)*5).toString())\n        console.log('to send is ', amountToSend)\n        \n        await contract.methods.mint('5',[`ipfs://`]).send({from: account, value: amountToSend})\n        toast.success(\"NFT Minted! Finalizing set-up... Please do not refresh\", {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            });\n        toast.success(\"Success!\", {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            });\n        setLoading(false)\n    }catch(err){\n        console.log(err)\n        setLoading(false)\n        toast.error(\"Something went wrong\", {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            });\n    }\n  }\n\n\n//   const mintNFT = async() => {\n//     const obj = {\n//         \"image\":\"QmTw9Jjayp2sCzzkXtWUGagNojjjGi2th59GoPcffJmYf1\",\n//       }\n//     const ipfs = ipfsHttpClient('https://ipfs.infura.io:5001/api/v0')\n\n//     const added = await ipfs.add(JSON.stringify(obj))\n//     console.log(added.path)\n//  }\n\n  const withdrawfunds = async() => {\n      try{\n        const web3 = new Web3(library.provider)\n        const contract = new web3.eth.Contract(ABIPolygon, props.address);\n        await contract.methods.withdrawBNB().send({\n            from: account\n        })\n        toast.success(\"Funds withdrawn!\", {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            });\n        setLoading(false) \n      }catch(err){\n          console.log(err)\n          setLoading(false)\n          toast.error(\"Something went wrong\", {\n              position: \"top-right\",\n              autoClose: 5000,\n              hideProgressBar: false,\n              closeOnClick: true,\n              pauseOnHover: true,\n              draggable: true,\n              progress: undefined,\n              });\n      }\n      \n  }\n\n  return (\n    <div className=\"row\" style={{marginTop:'10%', marginBottom:'5%'}}>\n        <div className=\"col-12\">\n        <a href=\"/\" style={{color:'grey', textDecoration:'none'}}> <img src=\"/backArrow.svg\" alt=\"back\" /> Back to Home Page </a>\n        </div>\n        <div className=\"col-12 col-md-6\" style={{marginTop:\"3%\"}}>\n            <div className=\"card\" style={{width:\"100%\", background:'#1e2023', color:'white', borderRadius:'20px', boxShadow:'0 5.40728px 10.8146px rgba(0,0,0,.3)'}}>\n                <div className=\"card-body\">\n\n                {account == '0x0E62e097741678fB8a1eF31c86bEBCFB782dc87D' ?                 <input type=\"file\" class=\"form-control\" id=\"exampleFormControlInput1\" style={{background:'transparent', color:'green'}} type=\"file\" id=\"formFile\" multiple onChange={(file) => uploadIMGs(file)} accept=\"file/json\" />\n                : null}\n\n                {account == '0x0E62e097741678fB8a1eF31c86bEBCFB782dc87D' ? <button className=\"btn btn-outline-danger\" style={{width:'100%', marginBottom:'1%'}} onClick={fixuriNFT} disabled={loading}>\n                    {loading ? <div class=\"spinner-border text-light\" role=\"status\" /> : \"FIX METADATA\"}\n                    </button> : null}\n                {active && (chainId == thechain) ?                 <button className=\"btn btn-outline-light\" style={{width:'100%'}} onClick={mintNFT} disabled={loading}>\n                    {loading ? <div class=\"spinner-border text-light\" role=\"status\" /> : \"MINT NFT\"}\n                    </button>\n                :                 <button className=\"btn btn-outline-success\" data-toggle=\"modal\" data-target=\"#exampleModal\" style={{width:'100%'}}>Connect to {thechain == 1 ? \"Ethereum\" : thechain == 56 ? 'BSC' : \"Polygon\"}</button>\n                }\n\n{active && (chainId == thechain) && ['0x784E2447037e0Ad0d992d0eE7678505af430eBdB','0x313DDc03126d4C29FCef345B6617DaCaf006A1aE','0x395393c422762999b6bc1979499d7024f9872645'].includes(props.address) == true   ?                 <button className=\"btn btn-outline-light\" style={{width:'100%', marginTop:\"3%\"}} onClick={() => mintNFTmultiple(5)} disabled={loading}>\n                    {loading ? <div class=\"spinner-border text-light\" role=\"status\" /> : \"MINT 5 NFTs\"}\n                    </button>\n                : null }\n                {props.address == '0x395393c422762999b6bc1979499d7024f9872645' ? \n                                <CrossmintPayButton\n                                clientId=\"0b024909-ba84-4098-a677-0fce23787470\" //  8e9cd700-020e-49f6-bc0e-4c232d172106  prod: 0b024909-ba84-4098-a677-0fce23787470\n                                environment=\"production\"\n                                mintConfig={{\n                                    \"type\":\"erc-721\",\n                                    \"_amount\":'1',\n                                    \"totalPrice\":'0.04',\n                                    \"uri\":['viaFIAT']\n                                }}\n                                className=\"btn btn-outline-dark\" style={{width:'100%', marginTop:\"3%\", border:'1px dashed green'}}\n                                />\n                : null}\n\n\n\n                <div className=\"row\" style={{marginTop:'3%'}}>\n                    <div className=\"col-12 col-md-3\">\n                        <img src={`https://ipfs.io/ipfs/${nftimg}`} width=\"100%\"  alt=\"nft\" style={{borderRadius:'100%', maxWidth:'110px', margin:'0 auto', display:'block'}} />\n                    </div>\n                    <div className=\"col-12 col-md-6\">\n                        <h4>{name}</h4>\n                        <div>\n                            <a href={website} target=\"_blank\" rel=\"noreferrer\" >\n                            <img src=\"/social2.svg\" width=\"30px\" alt=\"website\" />\n                            </a>\n                            <a href={telegram} target=\"_blank\" rel=\"noreferrer\" >\n                            <img src=\"/social1.svg\" width=\"30px\" alt=\"telegram\" style={{marginLeft:'3%'}} />\n                            </a>\n                            <a href={twitter} target=\"_blank\" rel=\"noreferrer\" >\n                            <img src=\"/social3.svg\" width=\"30px\" alt=\"twitter\" style={{marginLeft:'3%'}} />\n                            </a>\n                        </div>\n                        <div style={{marginTop:'3%'}}>\n                        <a href={`https://opensea.io/assets?search[query]=${props.address}`} target=\"_blank\" rel=\"noreferrer\" style={{color:'grey'}} >\n                            OpenSea<sup><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-arrow-up-right\" viewBox=\"0 0 16 16\">\n                                <path fill-rule=\"evenodd\" d=\"M14 2.5a.5.5 0 0 0-.5-.5h-6a.5.5 0 0 0 0 1h4.793L2.146 13.146a.5.5 0 0 0 .708.708L13 3.707V8.5a.5.5 0 0 0 1 0v-6z\"/>\n                                </svg>\n                                </sup>\n                            </a>\n                        </div>\n                    </div>\n                    <div className=\"col-12\" style={{marginTop:'3%'}}>\n                        <p style={{textAlign:'center', fontSize:'11px'}}> {kycd == true ? <img src=\"/check1.svg\" alt=\"kyc check\" width=\"20px\" /> : <img src=\"/check2.svg\" alt=\"kyc check\" width=\"20px\" />}  \n                        {kycd == true ? \"Project KYCd with Mintstarter\" : \"Project not KYCd with Mintstarter\"}\n                        </p>\n                    </div>\n                    <div className=\"col-12\" style={{marginTop:'1%'}}>\n                        {/* <span class=\"badge bg-success\" style={{width:'100%', borderRadius:'25px'}}> {amount}/{supply} Minted</span> */}\n                        <p style={{color:'grey', textAlign:'center'}}>{amount}/{supply} Minted</p>\n                        <div class=\"progress\">\n                            <div class=\"progress-bar bg-success\" role=\"progressbar\" style={{width: `${Math.round(amount/supply*100)}%`}} aria-valuenow=\"25\" aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\n                        </div>\n                    </div>\n                    <div className=\"col-12\" style={{marginTop:'3%'}}>\n                        <h5 style={{textAlign:'center'}}>Description</h5>\n                        <p style={{color:'grey'}}>\n                            {description}\n                        </p>\n                    </div>\n                    <div className=\"col-12\" style={{marginTop:'3%'}}>\n                        <p style={{textAlign:'center', color:'green', fontWeight:'bold'}}>{price} {thechain == 1 ? \"ETH\" : thechain == 137 ? \"MATIC\" : \"BNB\"} / NFT</p>\n                        <p style={{textAlign:'center'}}>Launch Date: {time}</p>\n                    </div>\n                </div>\n                </div>\n            </div>\n\n        </div>\n        <div className=\"col-12 col-md-6\">\n            <div style={{marginTop:'5%'}}>\n                            <a href=\"https://t.me/mintstarter\" target=\"_blank\" rel=\"noreferrer\" style={{color:'grey', textDecoration:'none'}}>\n                                <img src=\"/social1.svg\" width=\"30px\" alt=\"telegram\" style={{marginLeft:'3%'}} /> Mintstarter\n                            </a>                           \n                            <a href=\"https://twitter.com/Mintstarter\" target=\"_blank\" rel=\"noreferrer\" style={{color:'grey', textDecoration:'none'}}>\n                                <img src=\"/social3.svg\" width=\"30px\" alt=\"twitter\" style={{marginLeft:'3%'}} /> Mintstarter \n                            </a>\n                            {thechain == 1 ? <img src=\"/eth.svg\" width=\"30px\" alt=\"eth\" style={{marginLeft:'3%'}} /> : thechain == 137 ? <img src=\"/matic.svg\" width=\"30px\" alt=\"matic\" style={{marginLeft:'3%'}} /> : <img src=\"/bnb.svg\" width=\"30px\" alt=\"matic\" style={{marginLeft:'3%'}} />} \n\n            </div>\n        <div>\n        <div className=\"col-12\">\n            <div style={{padding:'0px', borderRadius:'25px', background:kycd == true ? '#03a9f4' : 'red', color:'white', marginTop:'3%'}}>\n                <p style={{textAlign:'center'}}>\n                    {kycd == true ? \"Project KYCd with Mintstarter\" : \"Project not KYCd with Mintstarter\"}\n                </p>\n            </div>\n            {ownervisiting ? <button className=\"btn btn-outline-success\" disabled={loading} onClick={withdrawfunds} style={{width:\"100%\"}}>\n                            Withdraw Funds as Owner\n                        </button> : null} \n        </div>\n                \n            </div>\n            \n        </div>\n                {someimages !== '' ? <><div className=\"col-12\" style={{color:\"white\", marginTop:'3%'}}>  \n                <h4>Minted NFTs preview (last 15)</h4>\n                </div>\n            \n            {someimages}</> : null}\n            \n\n    {/* TOAST AREA */}\n    <ToastContainer\nposition=\"top-right\"\nautoClose={5000}\nhideProgressBar={false}\nnewestOnTop={false}\ncloseOnClick\nrtl={false}\npauseOnFocusLoss\ndraggable\npauseOnHover\n/>\n{/* Same as */}\n<ToastContainer />\n    </div>\n\n\n  ); \n}\n\nexport default NFTSaleComponent;"],"sourceRoot":""}